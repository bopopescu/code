
http://code.activestate.com/recipes/langs/cpp/
https://github.com/fffaraz/awesome-cpp


Cool starting point for CSV lib
https://www.codeproject.com/Articles/741183/Cplusplus-Minimalistic-CSV-Streams
Source code at:
http://www.cs.rpi.edu//~musser/archive/2001/ap/restricted/accelerated-c++/unix-source/

Excellent APIs in C++
=====================
https://qpid.apache.org/releases/qpid-0.28/messaging-api/cpp/examples/

Collection of APIs in C++
=========================
http://en.cppreference.com/w/cpp/links/libs

HttpServer API by Facebook:
==========================
https://github.com/facebook/proxygen
https://github.com/facebook/wangle

study multiple parsers 

http://stackoverflow.com/questions/6148631/how-to-design-a-set-of-file-readers-and-writers-for-different-format
http://stackoverflow.com/questions/1752298/what-design-pattern-should-i-use-for-import-export

Awesome examples of patterns:
http://www.vincehuston.org/dp/
http://www.eee.metu.edu.tr/~bilgen/ACiftci.pdf

Tokenizer:
=========
https://www.codeproject.com/kb/recipes/tokenizer.aspx


// The typedefs have a trailing underscore so that they have a different name
// than the original functions which are in DLLs/SOs; if they have the same name
// then the DLLs/SOs will try to call the functions in the executable and cause
// a segfault. However, the #defines don't change the name mangling, so the
// #defines allow the executable to use the same name as the DLLs/SOs without
// causing any name conflicts.
typedef uint32_t (*LibConfigFileNumVersionsFPtr)();
extern LibConfigFileNumVersionsFPtr LibConfigFileNumVersions_;
#define LibConfigFileNumVersions LibConfigFileNumVersions_


static std::unique_ptr<Library> configFileLib(nullptr);
static std::unique_ptr<Library> i2cLib(nullptr);
static std::unique_ptr<Library> calFixtureLib(nullptr);

    configFileLib = std::unique_ptr<Library>(nullptr);
    i2cLib = std::unique_ptr<Library>(nullptr);
    calFixtureLib = std::unique_ptr<Library>(nullptr);

you're writing .cpp code and you need to interface with a superior language like "C"
extern "C"{
	#include "..\GetOptLib\optlist-0.3\optlist.h"
}

