;==========================================================
;Header
;==========================================================
        .nolist
#ifdef	VTI
	#define TI83P
#endif
	#include	"keyval.inc"
        #include        "ion.inc"
        .list

#ifdef  TI83P
        .org    progstart-2
        .db     $BB,$6D
#else
        .org    progstart
#endif
        ret
        jr      nc,start_of_program
        .db     "Bouncing Ball demo",0

ballX		=saferam3
ballY		=saferam3+1
Xspeed		=saferam3+2
Yspeed		=saferam3+3

start_of_program:

;==========================================================
; start of program
;==========================================================
	call gsClearbuffer
	call gsEnable
	call gsSetFreq
	call gsClearBuffer

	;=== reset vars
	ld a,10
	ld (ballX),a
	ld (ballY),a
	ld a,1
	ld (XSpeed),a
	ld (YSpeed),a

;==========================================================
; loop
;==========================================================
loop:
	call gsClearBuffer
	ld a,(ballY)
	ld l,a
	ld a,(ballX)
	ld ix,ballsprite
	ld b,8
	call gsPutSprite
	call gsCopyBuffer

	ld a,(ballX)
	or a \ jr z,ballx0
	cp 88 \ jr z,ballx88
	ld a,(xspeed)
	jr ballxend
ballx0:
	ld a,1
	ld (xspeed),a
	jr ballxend
ballx88:
	ld a,-1
	ld (xspeed),a
ballxend:
	ld b,a
	ld hl,ballX
	ld a,(hl)
	add a,b
	ld (hl),a

	ld a,(ballY)
	or a \ jr z,bally0
	cp 56 \ jr z,bally56
	ld a,(yspeed)
	jr ballyend
bally0:
	ld a,1
	ld (yspeed),a
	jr ballyend
bally56:
	ld a,-1
	ld (yspeed),a
ballyend:
	ld b,a
	ld hl,ballY
	ld a,(hl)
	add a,b
	ld (hl),a

	call gsGetk
	cp gClear \ jr nz,loop

;==========================================================
; quit
;==========================================================
quit:
	call gsDisable
	ret

;==========================================================
; grayscale include file
;==========================================================
; comment these defines in or out to activate/deactivate them

;#DEFINE NODOUBLEBUFFER	;when on,routines write directly to screen (faster and smaller)
;#DEFINE 3LEVELGRAY	;makes it 3-level grayscale (a bit faster)
#DEFINE XORSPRITE	;includes gsPutSprite
;#DEFINE LARGESPRITE	;includes gsLargeSprite
;#DEFINE ALIGNEDSPRITE	;includes gsAlignedsprite
;#DEFINE ALIGNEDMASKEDSPRITE

#include graylib.inc

;==========================================================
; ballsprite
;==========================================================
ballsprite:
 .db $3C,$76,$E3,$F1,$FB,$FF,$7E,$3C,$3C,$6A,$D5,$EB,$F5,$FB,$7E,$3C





.end
END

