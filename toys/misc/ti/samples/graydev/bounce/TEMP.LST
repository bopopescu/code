0001   0000             #define TI83 
0002   0000             ;==========================================================
0003   0000             ;Header
0004   0000             ;==========================================================
0011   0000                     .list
0012   0000             
0013   0000~            #ifdef  TI83P
0014   0000~                    .org    progstart-2
0015   0000~                    .db     $BB,$6D
0016   0000             #else
0017   9327                     .org    progstart
0018   9327             #endif
0019   9327 C9                  ret
0020   9328 30 13               jr      nc,start_of_program
0021   932A 426F756E6369        .db     "Bouncing Ball demo",0
0021   9330 6E672042616C6C2064656D6F00
0022   933D             
0023   933D             ballX		=saferam3
0024   933D             ballY		=saferam3+1
0025   933D             Xspeed		=saferam3+2
0026   933D             Yspeed		=saferam3+3
0027   933D             
0028   933D             start_of_program:
0029   933D             
0030   933D             ;==========================================================
0031   933D             ; start of program
0032   933D             ;==========================================================
0033   933D CD FF 93    	call gsClearbuffer
0034   9340 CD 31 94    	call gsEnable
0035   9343 CD CD 95    	call gsSetFreq
0036   9346 CD FF 93    	call gsClearBuffer
0037   9349             
0038   9349             	;=== reset vars
0039   9349 3E 0A       	ld a,10
0040   934B 32 C9 80    	ld (ballX),a
0041   934E 32 CA 80    	ld (ballY),a
0042   9351 3E 01       	ld a,1
0043   9353 32 CB 80    	ld (XSpeed),a
0044   9356 32 CC 80    	ld (YSpeed),a
0045   9359             
0046   9359             ;==========================================================
0047   9359             ; loop
0048   9359             ;==========================================================
0049   9359             loop:
0050   9359 CD FF 93    	call gsClearBuffer
0051   935C 3A CA 80    	ld a,(ballY)
0052   935F 6F          	ld l,a
0053   9360 3A C9 80    	ld a,(ballX)
0054   9363 DD 21 BE 9C 	ld ix,ballsprite
0055   9367 06 08       	ld b,8
0056   9369 CD BF 93    	call gsPutSprite
0057   936C CD 1A 94    	call gsCopyBuffer
0058   936F             
0059   936F 3A C9 80    	ld a,(ballX)
0060   9372 B7          	or a \ jr z,ballx0
0060   9373 28 09       
0061   9375 FE 58       	cp 88 \ jr z,ballx88
0061   9377 28 0C       
0062   9379 3A CB 80    	ld a,(xspeed)
0063   937C 18 0C       	jr ballxend
0064   937E             ballx0:
0065   937E 3E 01       	ld a,1
0066   9380 32 CB 80    	ld (xspeed),a
0067   9383 18 05       	jr ballxend
0068   9385             ballx88:
0069   9385 3E FF       	ld a,-1
0070   9387 32 CB 80    	ld (xspeed),a
0071   938A             ballxend:
0072   938A 47          	ld b,a
0073   938B 21 C9 80    	ld hl,ballX
0074   938E 7E          	ld a,(hl)
0075   938F 80          	add a,b
0076   9390 77          	ld (hl),a
0077   9391             
0078   9391 3A CA 80    	ld a,(ballY)
0079   9394 B7          	or a \ jr z,bally0
0079   9395 28 09       
0080   9397 FE 38       	cp 56 \ jr z,bally56
0080   9399 28 0C       
0081   939B 3A CC 80    	ld a,(yspeed)
0082   939E 18 0C       	jr ballyend
0083   93A0             bally0:
0084   93A0 3E 01       	ld a,1
0085   93A2 32 CC 80    	ld (yspeed),a
0086   93A5 18 05       	jr ballyend
0087   93A7             bally56:
0088   93A7 3E FF       	ld a,-1
0089   93A9 32 CC 80    	ld (yspeed),a
0090   93AC             ballyend:
0091   93AC 47          	ld b,a
0092   93AD 21 CA 80    	ld hl,ballY
0093   93B0 7E          	ld a,(hl)
0094   93B1 80          	add a,b
0095   93B2 77          	ld (hl),a
0096   93B3             
0097   93B3 CD 21 95    	call gsGetk
0098   93B6 FE 0F       	cp gClear \ jr nz,loop
0098   93B8 20 9F       
0099   93BA             
0100   93BA             ;==========================================================
0101   93BA             ; quit
0102   93BA             ;==========================================================
0103   93BA             quit:
0104   93BA CD 5E 94    	call gsDisable
0105   93BD C9          	ret
0106   93BE             
0107   93BE             ;==========================================================
0108   93BE             ; grayscale include file
0109   93BE             ;==========================================================
0110   93BE             ; comment these defines in or out to activate/deactivate them
0111   93BE             
0112   93BE             ;#DEFINE NODOUBLEBUFFER	;when on,routines write directly to screen (faster and smaller)
0113   93BE             ;#DEFINE 3LEVELGRAY	;makes it 3-level grayscale (a bit faster)
0114   93BE             #DEFINE XORSPRITE	;includes gsPutSprite
0115   93BE             ;#DEFINE LARGESPRITE	;includes gsLargeSprite
0116   93BE             ;#DEFINE ALIGNEDSPRITE	;includes gsAlignedsprite
0117   93BE             ;#DEFINE ALIGNEDMASKEDSPRITE
0118   93BE             
0119   93BE             #include graylib.inc
0001+  93BE             ;==========================================================
0002+  93BE             ; GRAYSCALE LIBRARY INCLUDE FILE
0003+  93BE             ;==========================================================
0004+  93BE             ; 11:20 10-11-2002
0005+  93BE             ;
0006+  93BE             ; by Duck (DP Kingma)
0007+  93BE             ; works under ion 83-/83+
0008+  93BE             ;
0009+  93BE             ; ==DEVELOPER NOTES==
0010+  93BE             ;
0011+  93BE             ; gsPutSprite	=xor sprite
0012+  93BE             ; gsLargeSprite	=large sprite
0013+  93BE             ; gsEnable		=enable grayscale
0014+  93BE             ; gsDisable		=disable grayscale
0015+  93BE             ; gsClearbuffer		=clear buffers
0016+  93BE             ; gsCopybuffer		=copies buffers to active buffers (so screen)
0017+  93BE             ; gsGetk		=tried to make is same as romcall _getk
0018+  93BE             ; gsSetFreq		=set frequency
0019+  93BE             ; (grayscale routines)	=the grayscale interrupts, dont activate them yourself ;)
0020+  93BE             ;
0021+  93BE             ; look at duckgray.txt for information about development!
0022+  93BE             
0023+  93BE             
0024+  93BE             ; interrupt frequency
0025+  93BE             ; can be 2, 4 and 6
0026+  93BE             
0027+  93BE 02          InterFrequency:	.db 2
0028+  93BF             
0029+  93BF             gbuf1	= gbuf
0030+  93BF             gbuf2	= saferam1
0031+  93BF             
0032+  93BF~            #ifdef NODOUBLEBUFFER
0033+  93BF~            gActivebuf1 = gbuf1
0034+  93BF~            gActivebuf2 = gbuf2
0035+  93BF             #endif 
0036+  93BF             
0037+  93BF             #ifdef XORSPRITE
0038+  93BF             ;==========================================================
0039+  93BF             ; gsPutSprite
0040+  93BF             ;==========================================================
0041+  93BF             ;=== gsPutSprite 1.0 by Durk Kingma
0042+  93BF             ;thanks to Joe Wingbermuehle for his ionPutSprite routine
0043+  93BF             ;
0044+  93BF             ; puts XOR grayscale sprite
0045+  93BF             ; b=size of sprite
0046+  93BF             ; l=yc
0047+  93BF             ; a=xc
0048+  93BF             ; ix holds pointer
0049+  93BF             gsPutSprite:
0050+  93BF             
0051+  93BF F5          	push af
0052+  93C0 E5          	push hl
0053+  93C1 C5          	push bc
0054+  93C2             
0055+  93C2 CD AD 91    	call	ionPutSprite
0056+  93C5             
0057+  93C5 C1          	pop bc
0058+  93C6 E1          	pop hl
0059+  93C7 F1          	pop af
0060+  93C8             
0061+  93C8 5D          	ld	e,l
0062+  93C9 26 00       	ld	h,$00
0063+  93CB 54          	ld	d,h
0064+  93CC 19          	add	hl,de
0065+  93CD 19          	add	hl,de
0066+  93CE 29          	add	hl,hl
0067+  93CF 29          	add	hl,hl
0068+  93D0 5F          	ld	e,a
0069+  93D1 E6 07       	and	$07
0070+  93D3 4F          	ld	c,a
0071+  93D4 CB 3B       	srl	e
0072+  93D6 CB 3B       	srl	e
0073+  93D8 CB 3B       	srl	e
0074+  93DA 19          	add	hl,de
0075+  93DB 11 65 82    	ld	de,gbuf2
0076+  93DE 19          	add	hl,de
0077+  93DF             gsPutSpriteLoop1:
0078+  93DF DD 56 00    pgxs_sl1:	ld	d,(ix)
0079+  93E2 1E 00       	ld	e,$00
0080+  93E4 79          	ld	a,c
0081+  93E5 B7          	or	a
0082+  93E6 28 07       	jr	z,gsPutSpriteSkip1
0083+  93E8             gsPutSpriteLoop2:
0084+  93E8 CB 3A       	srl	d
0085+  93EA CB 1B       	rr	e
0086+  93EC 3D          	dec	a
0087+  93ED 20 F9       	jr	nz,gsPutSpriteLoop2
0088+  93EF             gsPutSpriteSkip1:
0089+  93EF 7E          	ld	a,(hl)
0090+  93F0 AA          	xor	d
0091+  93F1 77          	ld	(hl),a
0092+  93F2 23          	inc	hl
0093+  93F3 7E          	ld	a,(hl)
0094+  93F4 AB          	xor	e
0095+  93F5 77          	ld	(hl),a
0096+  93F6 11 0B 00    	ld	de,$0B
0097+  93F9 19          	add	hl,de
0098+  93FA DD 23       	inc	ix
0099+  93FC 10 E1       	djnz	gsPutSpriteLoop1
0100+  93FE             
0101+  93FE C9          	ret
0102+  93FF             #endif
0103+  93FF             
0104+  93FF~            #ifdef ALIGNEDSPRITE
0105+  93FF~            ;==========================================================
0106+  93FF~            ; gsAlignedSprite
0107+  93FF~            ;==========================================================
0108+  93FF~            ; puts 8x8 aligned sprite
0109+  93FF~            ; a=x l=y ix=sprite
0110+  93FF~            gsAlignedSprite:
0111+  93FF~            	ld h,0
0112+  93FF~            	ld d,h
0113+  93FF~            	ld e,l
0114+  93FF~            	add hl,de
0115+  93FF~            	add hl,de
0116+  93FF~            	add hl,hl
0117+  93FF~            	add hl,hl
0118+  93FF~            	ld e,a
0119+  93FF~            	add hl,de
0120+  93FF~            	push hl
0121+  93FF~            	ld de,gbuf1
0122+  93FF~            	add hl,de
0123+  93FF~            	;now we got right spot in hl
0124+  93FF~            	ld de,12
0125+  93FF~            	ld b,8
0126+  93FF~            gsAlignedSprite_loopbuf1:
0127+  93FF~            	ld a,(ix)
0128+  93FF~            	ld (hl),a
0129+  93FF~            	add hl,de
0130+  93FF~            	inc ix
0131+  93FF~            	djnz gsAlignedSprite_loopbuf1
0132+  93FF~            
0133+  93FF~            	pop hl
0134+  93FF~            	ld de,gbuf2
0135+  93FF~            	add hl,de
0136+  93FF~            	ld de,12
0137+  93FF~            	ld b,8
0138+  93FF~            gsAlignedSprite_loopbuf2:
0139+  93FF~            	ld a,(ix)
0140+  93FF~            	ld (hl),a
0141+  93FF~            	add hl,de
0142+  93FF~            	inc ix
0143+  93FF~            	djnz gsAlignedSprite_loopbuf2
0144+  93FF~            	ret
0145+  93FF             #endif
0146+  93FF             
0147+  93FF~            #IFDEF ALIGNEDMASKEDSPRITE
0148+  93FF~            ;==========================================================
0149+  93FF~            ; gsAlignedMaskedSprite
0150+  93FF~            ;==========================================================
0151+  93FF~            ; mask/draw 8x8 aligned sprite
0152+  93FF~            ; a=number + 64*(HORIZFLIP) + 128*(VERTFLIP)
0153+  93FF~            ; h=x l=y de=sprite table
0154+  93FF~            ; output: everything destroyed, but ix=ix+8
0155+  93FF~            gsAlignedMaskedSprite:
0156+  93FF~            	push hl
0157+  93FF~            	push af
0158+  93FF~            	and %00111111
0159+  93FF~            
0160+  93FF~            	ld h,0 \ ld l,a
0160+  93FF~            	ld h,0 \ ld l,a
0161+  93FF~            	add hl,hl
0162+  93FF~            	add hl,hl
0163+  93FF~            	add hl,hl
0164+  93FF~            	add hl,hl
0165+  93FF~            	add hl,de
0166+  93FF~            	;database to temp
0167+  93FF~            	ld de,gsTempSprite
0168+  93FF~            	ld bc,16
0169+  93FF~            	ldir
0170+  93FF~            
0171+  93FF~            	pop af
0172+  93FF~            	bit 6,a \ call nz,gsFlipHoriz
0172+  93FF~            	bit 6,a \ call nz,gsFlipHoriz
0173+  93FF~            	bit 7,a \ call nz,gsFlipVert ;not working yet
0173+  93FF~            	bit 7,a \ call nz,gsFlipVert ;not working yet
0174+  93FF~            	ld ix,gsTempSprite
0175+  93FF~            	pop hl
0176+  93FF~            	ld a,h
0177+  93FF~            
0178+  93FF~            	ld h,0
0179+  93FF~            	ld b,h
0180+  93FF~            	ld c,l
0181+  93FF~            	add hl,bc
0182+  93FF~            	add hl,bc
0183+  93FF~            	add hl,hl
0184+  93FF~            	add hl,hl
0185+  93FF~            	ld c,a
0186+  93FF~            	add hl,bc
0187+  93FF~            	ld b,h \ ld c,l
0187+  93FF~            	ld b,h \ ld c,l
0188+  93FF~            
0189+  93FF~            	ld hl,gbuf2
0190+  93FF~            	add hl,bc	;de=layer2
0191+  93FF~            	ex de,hl
0192+  93FF~            	ld hl,gbuf1
0193+  93FF~            	add hl,bc	;hl=layer1
0194+  93FF~            
0195+  93FF~            	ld b,8
0196+  93FF~            gsMaskedSprite_loop:
0197+  93FF~            	push bc
0198+  93FF~            
0199+  93FF~            	push ix
0200+  93FF~            
0201+  93FF~            	ld a,(ix) ;get spr1
0202+  93FF~            	ld bc,8
0203+  93FF~            	add ix,bc
0204+  93FF~            	ld c,a	  ;save spr1
0205+  93FF~            	
0206+  93FF~            	ld a,(ix) ;get spr2
0207+  93FF~            	push af
0208+  93FF~            	cpl	  ;flip spr2
0209+  93FF~            	and c	  ;mask ready
0210+  93FF~            	ld b,a	  ;save
0211+  93FF~            
0212+  93FF~            	cpl	  ;flip mask
0213+  93FF~            	and c	  ;mask spr1
0214+  93FF~            	ld c,a	  ;save spr1
0215+  93FF~            
0216+  93FF~            	ld a,b
0217+  93FF~            	and (hl)  ;mask layer1
0218+  93FF~            	or c	  ;draw sprite
0219+  93FF~            	ld (hl),a ;save
0220+  93FF~            
0221+  93FF~            	ld a,b
0222+  93FF~            	cpl
0223+  93FF~            	ld b,a
0224+  93FF~            
0225+  93FF~            	pop af	  ;get spr2
0226+  93FF~            	and b	  ;mask spr2
0227+  93FF~            	ld c,a
0228+  93FF~            	
0229+  93FF~            	ld a,b	  ;flip mask
0230+  93FF~            	cpl
0231+  93FF~            
0232+  93FF~            	ex de,hl  ;ex layer1/2
0233+  93FF~            	and (hl)  ;mask layer2
0234+  93FF~            	or c	  ;draw sprite
0235+  93FF~            	ld (hl),a ;save
0236+  93FF~            
0237+  93FF~            	ld bc,12
0238+  93FF~            	add hl,bc
0239+  93FF~            	ex de,hl  ;ex back
0240+  93FF~            	add hl,bc
0241+  93FF~            
0242+  93FF~            	pop ix
0243+  93FF~            	inc ix
0244+  93FF~            
0245+  93FF~            	pop bc
0246+  93FF~            	djnz gsMaskedSprite_loop
0247+  93FF~            	ret
0248+  93FF~            
0249+  93FF~            ;=== horizontal sprite flip
0250+  93FF~            gsFlipHoriz:
0251+  93FF~            	push af
0252+  93FF~            	push hl
0253+  93FF~            	ld de,gsTempSprite+7
0254+  93FF~            	ld hl,gsTempSprite2
0255+  93FF~            	ld b,8
0256+  93FF~            gsFlipHoriz_loop:
0257+  93FF~            	ld a,(de)
0258+  93FF~            	ld (hl),a
0259+  93FF~            	dec de
0260+  93FF~            	inc hl
0261+  93FF~            	djnz gsFlipHoriz_loop
0262+  93FF~            	ld bc,16
0263+  93FF~            	ex de,hl
0264+  93FF~            	add hl,bc
0265+  93FF~            	ex de,hl
0266+  93FF~            	ld b,8
0267+  93FF~            gsFlipHoriz_loop2:
0268+  93FF~            	ld a,(de)
0269+  93FF~            	ld (hl),a
0270+  93FF~            	dec de
0271+  93FF~            	inc hl
0272+  93FF~            	djnz gsFlipHoriz_loop2
0273+  93FF~            	call gsTemp2To1
0274+  93FF~            	pop hl
0275+  93FF~            	pop af
0276+  93FF~            	ret
0277+  93FF~            
0278+  93FF~            ;=== vertical sprite flip
0279+  93FF~            gsFlipVert:
0280+  93FF~            	push af
0281+  93FF~            	push hl
0282+  93FF~            	ld hl,gsTempSprite
0283+  93FF~            	ld de,gsTempSprite2
0284+  93FF~            	ld b,16
0285+  93FF~            gsFlipVert_loop:
0286+  93FF~            	ld a,(hl)
0287+  93FF~            	ld c,0
0288+  93FF~            	rlca
0289+  93FF~            	rr c
0290+  93FF~            	rlca
0291+  93FF~            	rr c
0292+  93FF~            	rlca
0293+  93FF~            	rr c
0294+  93FF~            	rlca
0295+  93FF~            	rr c
0296+  93FF~            	rlca
0297+  93FF~            	rr c
0298+  93FF~            	rlca
0299+  93FF~            	rr c
0300+  93FF~            	rlca
0301+  93FF~            	rr c
0302+  93FF~            	rlca
0303+  93FF~            	rr c
0304+  93FF~            	ld a,c
0305+  93FF~            	ld (de),a
0306+  93FF~            	inc hl
0307+  93FF~            	inc de
0308+  93FF~            	djnz gsFlipVert_loop
0309+  93FF~            	call gsTemp2To1
0310+  93FF~            	pop hl
0311+  93FF~            	pop af
0312+  93FF~            	ret
0313+  93FF~            
0314+  93FF~            gsTemp2To1:
0315+  93FF~            	ld hl,gsTempSprite2
0316+  93FF~            	ld de,gsTempSprite
0317+  93FF~            	ld bc,16
0318+  93FF~            	ldir
0319+  93FF~            	ret
0320+  93FF~            
0321+  93FF~            gsTempSprite:
0322+  93FF~            	.db 0,0,0,0,0,0,0,0
0323+  93FF~            	.db 0,0,0,0,0,0,0,0
0324+  93FF~            gsTempSprite2:
0325+  93FF~            	.db 0,0,0,0,0,0,0,0
0326+  93FF~            	.db 0,0,0,0,0,0,0,0
0327+  93FF~            
0328+  93FF~            
0329+  93FF             #ENDIF
0330+  93FF             
0331+  93FF             
0332+  93FF~            #ifdef LARGESPRITE
0333+  93FF~            ;==========================================================
0334+  93FF~            ; gsLargeSprite
0335+  93FF~            ;==========================================================
0336+  93FF~            ;=== gsLargeSprite 1.0 by Durk Kingma
0337+  93FF~            ;thanks to Joe Wingbermuehle for his ionPutSprite routine
0338+  93FF~            ;
0339+  93FF~            ; puts large Grayscale sprite
0340+  93FF~            ; b=size of sprite
0341+  93FF~            ; l=yc
0342+  93FF~            ; a=xc
0343+  93FF~            ; ix holds pointer
0344+  93FF~            ;-----> Draw a picture
0345+  93FF~            ;Input:	ix->sprite
0346+  93FF~            ;	a=x
0347+  93FF~            ;	l=y
0348+  93FF~            ;	b=height	(in pixels)
0349+  93FF~            ;	c=width		(in bytes, e.g. 2 would be 16)
0350+  93FF~            ;Output: nothing
0351+  93FF~            ; All registers are destroyed except bc', de', hl'
0352+  93FF~            gsLargeSprite:
0353+  93FF~            
0354+  93FF~            	push af
0355+  93FF~            	push hl
0356+  93FF~            	push bc
0357+  93FF~            
0358+  93FF~            	call ionLargeSprite
0359+  93FF~            
0360+  93FF~            	pop bc
0361+  93FF~            	pop hl
0362+  93FF~            	pop af
0363+  93FF~            
0364+  93FF~            	di
0365+  93FF~            	ex	af,af'
0366+  93FF~            	ld	a,c
0367+  93FF~            	push	af
0368+  93FF~            	ex	af,af'
0369+  93FF~            	ld	e,l
0370+  93FF~            	ld	h,$00
0371+  93FF~            	ld	d,h
0372+  93FF~            	add	hl,de ;x12
0373+  93FF~            	add	hl,de ;
0374+  93FF~            	add	hl,hl ;
0375+  93FF~            	add	hl,hl ;
0376+  93FF~            	ld	e,a
0377+  93FF~            	and	$07
0378+  93FF~            	ld	c,a
0379+  93FF~            	srl	e
0380+  93FF~            	srl	e
0381+  93FF~            	srl	e
0382+  93FF~            	add	hl,de
0383+  93FF~            	ld	de,gbuf2
0384+  93FF~            	add	hl,de
0385+  93FF~            gsLargeSpriteLoop1:
0386+  93FF~            	push	hl
0387+  93FF~            gsLargeSpriteLoop2:
0388+  93FF~            	ld	d,(ix)
0389+  93FF~            	ld	e,$00
0390+  93FF~            	ld	a,c
0391+  93FF~            	or	a
0392+  93FF~            	jr	z,gsLargeSpriteSkip1
0393+  93FF~            gsLargeSpriteLoop3:
0394+  93FF~            	srl	d
0395+  93FF~            	rr	e
0396+  93FF~            	dec	a
0397+  93FF~            	jr	nz,gsLargeSpriteLoop3
0398+  93FF~            gsLargeSpriteSkip1:
0399+  93FF~            	ld	a,(hl)
0400+  93FF~            	xor	d
0401+  93FF~            	ld	(hl),a
0402+  93FF~            	inc	hl
0403+  93FF~            	ld	a,(hl)
0404+  93FF~            	xor	e
0405+  93FF~            	ld	(hl),a
0406+  93FF~            	inc	ix
0407+  93FF~            	ex	af,af'
0408+  93FF~            	dec	a
0409+  93FF~            	push	af
0410+  93FF~            	ex	af,af'
0411+  93FF~            	pop	af
0412+  93FF~            	jr	nz,gsLargeSpriteLoop2
0413+  93FF~            	pop	hl
0414+  93FF~            	pop	af
0415+  93FF~            	push	af
0416+  93FF~            	ex	af,af'
0417+  93FF~            	ld	de,$0C
0418+  93FF~            	add	hl,de
0419+  93FF~            	djnz	gsLargeSpriteLoop1
0420+  93FF~            	pop	af
0421+  93FF~            
0422+  93FF~            	
0423+  93FF~            	ld a,(interfrequency) \ out ($04),a
0423+  93FF~            	ld a,(interfrequency) \ out ($04),a
0424+  93FF~            	ld a,$08 \ out ($03),a
0424+  93FF~            	ld a,$08 \ out ($03),a
0425+  93FF~            	ld a,$0A \ out ($03),a
0425+  93FF~            	ld a,$0A \ out ($03),a
0426+  93FF~            	ei
0427+  93FF~            	ret
0428+  93FF             #endif
0429+  93FF             
0430+  93FF             ;==========================================================
0431+  93FF             ; gsClearbuffer
0432+  93FF             ;==========================================================
0433+  93FF             gsClearbuffer:
0434+  93FF 21 29 8E    	ld hl,gbuf1
0435+  9402 11 2A 8E    	ld de,gbuf1+1
0436+  9405 01 FF 02    	ld bc,767
0437+  9408 36 00       	ld (hl),0
0438+  940A ED B0       	ldir
0439+  940C 21 65 82    	ld hl,gbuf2
0440+  940F 11 66 82    	ld de,gbuf2+1
0441+  9412 01 FF 02    	ld bc,767
0442+  9415 36 00       	ld (hl),0
0443+  9417 ED B0       	ldir
0444+  9419 C9          	ret
0445+  941A             
0446+  941A             ;==========================================================
0447+  941A             ; gsCopyBuffer
0448+  941A             ;==========================================================
0449+  941A             gsCopybuffer:
0450+  941A             #ifndef NODOUBLEBUFFER
0451+  941A 21 29 8E    	ld hl,gbuf1
0452+  941D 11 BE 96    	ld de,gActivebuf1
0453+  9420 01 00 03    	ld bc,768
0454+  9423 ED B0       	ldir
0455+  9425 21 65 82    	ld hl,gbuf2
0456+  9428 11 BE 99    	ld de,gActivebuf2
0457+  942B 01 00 03    	ld bc,768
0458+  942E ED B0       	ldir
0459+  9430             #endif
0460+  9430 C9          	ret
0461+  9431             
0462+  9431             ;==========================================================
0463+  9431             ; gsEnable
0464+  9431             ;==========================================================
0465+  9431             gsEnable:
0466+  9431             #IFDEF TI83
0467+  9431 21 00 86    	ld hl,8600h
0468+  9434 11 01 86    	ld de,8600h+1
0469+  9437 01 00 01    	ld bc,256
0470+  943A 36 87       	ld (hl),87h
0471+  943C ED B0       	ldir
0472+  943E             
0473+  943E 21 67 94    	ld hl,interrupt_start
0474+  9441 11 87 87    	ld de,8787h
0475+  9444 01 03 00    	ld bc,INTERRUPT_end-interrupt_start
0476+  9447 ED B0       	ldir
0477+  9449 3E 86       	ld a,86h
0478+  944B ED 47       	ld i,a
0479+  944D             #ENDIF
0480+  944D~            #IFDEF TI83P
0481+  944D~            	ld hl,8700h
0482+  944D~            	ld de,8700h+1
0483+  944D~            	ld bc,256
0484+  944D~            	ld (hl),86h
0485+  944D~            	ldir
0486+  944D~            
0487+  944D~            	ld hl,interrupt_start
0488+  944D~            	ld de,8686h
0489+  944D~            	ld bc,INTERRUPT_end-interrupt_start
0490+  944D~            	ldir
0491+  944D~            	ld a,87h
0492+  944D~            	ld i,a
0493+  944D             #ENDIF
0494+  944D             
0495+  944D ED 5E       	im 2
0496+  944F             
0497+  944F 3A BE 93    	ld a,(interfrequency) \ out ($04),a
0497+  9452 D3 04       
0498+  9454 3E 08       	ld a,$08 \ out ($03),a
0498+  9456 D3 03       
0499+  9458 3E 0A       	ld a,$0A \ out ($03),a
0499+  945A D3 03       
0500+  945C FB          	ei
0501+  945D             
0502+  945D C9          	ret
0503+  945E             
0504+  945E             ;==========================================================
0505+  945E             ; gsDisable
0506+  945E             ;==========================================================
0507+  945E             gsDisable:
0508+  945E F3          	di
0509+  945F ED 56       	im 1
0510+  9461 3E 06       	ld a,6 \ out ($04),a
0510+  9463 D3 04       
0511+  9465 FB          	ei
0512+  9466 C9          	ret
0513+  9467             
0514+  9467             ;==========================================================
0515+  9467             ; interrupt
0516+  9467             ;==========================================================
0517+  9467             interrupt_start:
0518+  9467~            #ifdef 3LEVELGRAY
0519+  9467~            	jp draw3levelGrayscale
0520+  9467             #else
0521+  9467 C3 6A 94    	jp draw4levelGrayscale
0522+  946A             #endif
0523+  946A             interrupt_end:
0524+  946A             
0525+  946A~            #ifdef 3LEVELGRAY
0526+  946A~            ;==========================================================
0527+  946A~            ; draw3levelGrayScale INTERRUPT
0528+  946A~            ;==========================================================
0529+  946A~            draw3levelGrayscale:
0530+  946A~            
0531+  946A~            	push af \ push bc \ push de \ push hl
0531+  946A~            	push af \ push bc \ push de \ push hl
0531+  946A~            	push af \ push bc \ push de \ push hl
0531+  946A~            	push af \ push bc \ push de \ push hl
0532+  946A~            	
0533+  946A~            grayFastCopy:
0534+  946A~            	ld	a,$80
0535+  946A~            	out	($10),a
0536+  946A~            
0537+  946A~            
0538+  946A~            	exx
0539+  946A~            	ld	hl,gActivebuf2-12-(-(12*64)+1)
0540+  946A~            	ld	a,(grayvar)
0541+  946A~            	ld	b,a
0542+  946A~            	cpl
0543+  946A~            	ld	c,a
0544+  946A~            	exx
0545+  946A~            
0546+  946A~            	ld	hl,gActivebuf1-12-(-(12*64)+1)
0547+  946A~            	ld	a,$20
0548+  946A~            	ld	c,a
0549+  946A~            
0550+  946A~            grayFastCopyAgain:
0551+  946A~            
0552+  946A~            
0553+  946A~            	ld	b,16
0554+  946A~            
0555+  946A~            	;=== x-loop
0556+  946A~            	inc	c
0557+  946A~            	ld	de,-(12*64)+1
0558+  946A~            	out	($10),a
0559+  946A~            	add	hl,de
0560+  946A~            	ld	de,12
0561+  946A~            
0562+  946A~            	exx	
0563+  946A~            	ld	de,-(12*64)+1
0564+  946A~            	add	hl,de
0565+  946A~            	ld	de,12
0566+  946A~            	exx
0567+  946A~            
0568+  946A~            grayFastCopyLoop:
0569+  946A~            	;===y-loop
0570+  946A~            	exx
0571+  946A~            	add	hl,de
0572+  946A~            	ld	a,(hl)
0573+  946A~            	and	b
0574+  946A~            	exx
0575+  946A~            	add	hl,de
0576+  946A~            	or	(hl)
0577+  946A~            	out	($11),a
0578+  946A~            
0579+  946A~            	inc bc ; 6 waste
0580+  946A~            
0581+  946A~            	exx
0582+  946A~            	add	hl,de
0583+  946A~            	ld	a,(hl)
0584+  946A~            	and	c
0585+  946A~            	exx
0586+  946A~            	add	hl,de
0587+  946A~            	or	(hl)
0588+  946A~            	out	($11),a
0589+  946A~            
0590+  946A~            	dec bc ; 6 waste
0591+  946A~            
0592+  946A~            	exx
0593+  946A~            	add	hl,de
0594+  946A~            	ld	a,(hl)
0595+  946A~            	and	b
0596+  946A~            	exx
0597+  946A~            	add	hl,de
0598+  946A~            	or	(hl)
0599+  946A~            	out	($11),a
0600+  946A~            
0601+  946A~            	ld a,3 ;waste
0602+  946A~            
0603+  946A~            	exx
0604+  946A~            	add	hl,de
0605+  946A~            	ld	a,(hl)
0606+  946A~            	and	c
0607+  946A~            	exx
0608+  946A~            	add	hl,de
0609+  946A~            	or	(hl)
0610+  946A~            	out	($11),a
0611+  946A~            
0612+  946A~            	djnz	grayFastCopyLoop
0613+  946A~            
0614+  946A~            
0615+  946A~            	ld	a,c
0616+  946A~            	cp	$2B+1
0617+  946A~            	jr	nz,grayFastCopyAgain
0618+  946A~            
0619+  946A~            	ld a,(grayvar)
0620+  946A~            	cpl
0621+  946A~            	ld (grayvar),a
0622+  946A~            	
0623+  946A~            	ld a,(interfrequency) \ out ($04),a
0623+  946A~            	ld a,(interfrequency) \ out ($04),a
0624+  946A~            	ld a,$08 \ out ($03),a
0624+  946A~            	ld a,$08 \ out ($03),a
0625+  946A~            	ld a,$0A \ out ($03),a
0625+  946A~            	ld a,$0A \ out ($03),a
0626+  946A~            
0627+  946A~            	pop hl \ pop de \ pop bc \ pop af
0627+  946A~            	pop hl \ pop de \ pop bc \ pop af
0627+  946A~            	pop hl \ pop de \ pop bc \ pop af
0627+  946A~            	pop hl \ pop de \ pop bc \ pop af
0628+  946A~            
0629+  946A~            	ei
0630+  946A~            	ret
0631+  946A~            
0632+  946A~            grayvar:
0633+  946A~            	.db %10101010
0634+  946A             #ENDIF	
0635+  946A             
0636+  946A             ;==========================================================
0637+  946A             ; draw4levelGrayScale INTERRUPT
0638+  946A             ;==========================================================
0639+  946A             draw4levelGrayscale:
0640+  946A             
0641+  946A~            #ifdef BETTERCOLOR
0642+  946A~            
0643+  946A~            	push af \ push bc \ push de \ push hl
0643+  946A~            	push af \ push bc \ push de \ push hl
0643+  946A~            	push af \ push bc \ push de \ push hl
0643+  946A~            	push af \ push bc \ push de \ push hl
0644+  946A~            	
0645+  946A~            Gray4afastCopy:
0646+  946A~            	ld	a,$80
0647+  946A~            	out	($10),a
0648+  946A~            
0649+  946A~            	exx
0650+  946A~            	ld	hl,gActivebuf2-12-(-(12*64)+1)
0651+  946A~            	exx
0652+  946A~            
0653+  946A~            	ld	hl,gActivebuf1-12-(-(12*64)+1)
0654+  946A~            	ld	a,$20
0655+  946A~            	ld	c,a
0656+  946A~            
0657+  946A~            Gray4afastCopyAgain:
0658+  946A~            
0659+  946A~            	ld	b,16
0660+  946A~            
0661+  946A~            	;=== x-loop
0662+  946A~            	inc	c
0663+  946A~            	ld	de,-(12*64)+1
0664+  946A~            	out	($10),a
0665+  946A~            	add	hl,de
0666+  946A~            	ld	de,12
0667+  946A~            
0668+  946A~            	exx	
0669+  946A~            	ld	de,-(12*64)+1
0670+  946A~            	add	hl,de
0671+  946A~            	ld	de,12
0672+  946A~            	exx
0673+  946A~            
0674+  946A~            Gray4afastCopyLoop:
0675+  946A~            	;===y-loop
0676+  946A~            	push bc
0677+  946A~            
0678+  946A~            ;-------------------------
0679+  946A~            	exx
0680+  946A~            	add	hl,de
0681+  946A~            	ld	a,(hl)
0682+  946A~            Gray4afc_moda1:
0683+  946A~            	and	%01011010
0684+  946A~            	exx
0685+  946A~            	add	hl,de
0686+  946A~            	ld	b,a
0687+  946A~            	ld	a,(hl)
0688+  946A~            Gray4afc_moda2:
0689+  946A~            	and	%10100101
0690+  946A~            	or	b
0691+  946A~            	out	($11),a
0692+  946A~            ;-------------------------
0693+  946A~            	exx
0694+  946A~            	add	hl,de
0695+  946A~            	ld	a,(hl)
0696+  946A~            Gray4afc_modb1:
0697+  946A~            	and	%01011010
0698+  946A~            	exx
0699+  946A~            	add	hl,de
0700+  946A~            	ld	b,a
0701+  946A~            	ld	a,(hl)
0702+  946A~            Gray4afc_modb2:
0703+  946A~            	and	%10100101
0704+  946A~            	or	b
0705+  946A~            	out	($11),a
0706+  946A~            ;-------------------------
0707+  946A~            	exx
0708+  946A~            	add	hl,de
0709+  946A~            	ld	a,(hl)
0710+  946A~            Gray4afc_modc1:
0711+  946A~            	and	%10101101
0712+  946A~            	exx
0713+  946A~            	add	hl,de
0714+  946A~            	ld	b,a
0715+  946A~            	ld	a,(hl)
0716+  946A~            Gray4afc_modc2:
0717+  946A~            	and	%01010010
0718+  946A~            	or	b
0719+  946A~            	out	($11),a
0720+  946A~            ;-------------------------
0721+  946A~            	exx
0722+  946A~            	add	hl,de
0723+  946A~            	ld	a,(hl)
0724+  946A~            Gray4afc_modd1:
0725+  946A~            	and	%11010110
0726+  946A~            	exx
0727+  946A~            	add	hl,de
0728+  946A~            	ld	b,a
0729+  946A~            	ld	a,(hl)
0730+  946A~            Gray4afc_modd2:
0731+  946A~            	and	%00101001
0732+  946A~            	or	b
0733+  946A~            	out	($11),a
0734+  946A~            ;-------------------------
0735+  946A~            
0736+  946A~            	pop bc
0737+  946A~            	djnz	Gray4afastCopyLoop
0738+  946A~            	;===end y-loop
0739+  946A~            
0740+  946A~            	ld	a,c
0741+  946A~            	cp	$2B+1
0742+  946A~            	jp	nz,Gray4afastCopyAgain
0743+  946A~            	;===end x-loop
0744+  946A~            
0745+  946A~            	ld a,(Gray4agrayint)
0746+  946A~            	inc a
0747+  946A~            	cp 4 \ jr nz,Gray4afc_grayintinc
0747+  946A~            	cp 4 \ jr nz,Gray4afc_grayintinc
0748+  946A~            	xor a
0749+  946A~            Gray4afc_grayintinc:
0750+  946A~            	ld (Gray4agrayint),a
0751+  946A~            
0752+  946A~            
0753+  946A~            	add a,a
0754+  946A~            	ld hl,Gray4afc_masktable
0755+  946A~            	ld b,0 \ ld c,a
0755+  946A~            	ld b,0 \ ld c,a
0756+  946A~            	add hl,bc
0757+  946A~            	;first
0758+  946A~            	ld a,(hl)
0759+  946A~            	ld (Gray4afc_moda1+1),a
0760+  946A~            	inc hl
0761+  946A~            	ld a,(hl)
0762+  946A~            	ld (Gray4afc_moda2+1),a
0763+  946A~            	inc hl
0764+  946A~            	ld a,(hl)
0765+  946A~            	ld (Gray4afc_modb1+1),a
0766+  946A~            	inc hl
0767+  946A~            	ld a,(hl)
0768+  946A~            	ld (Gray4afc_modb2+1),a
0769+  946A~            	inc hl
0770+  946A~            
0771+  946A~            	ld a,(hl)
0772+  946A~            	ld (Gray4afc_modc1+1),a
0773+  946A~            	inc hl
0774+  946A~            	ld a,(hl)
0775+  946A~            	ld (Gray4afc_modc2+1),a
0776+  946A~            	inc hl
0777+  946A~            	ld a,(hl)
0778+  946A~            	ld (Gray4afc_modd1+1),a
0779+  946A~            	inc hl
0780+  946A~            	ld a,(hl)
0781+  946A~            	ld (Gray4afc_modd2+1),a
0782+  946A~            
0783+  946A~            
0784+  946A~            
0785+  946A~            	ld a,(interfrequency) \ out ($04),a
0785+  946A~            	ld a,(interfrequency) \ out ($04),a
0786+  946A~            	ld a,$08 \ out ($03),a
0786+  946A~            	ld a,$08 \ out ($03),a
0787+  946A~            	ld a,$0A \ out ($03),a
0787+  946A~            	ld a,$0A \ out ($03),a
0788+  946A~            
0789+  946A~            	pop hl \ pop de \ pop bc \ pop af
0789+  946A~            	pop hl \ pop de \ pop bc \ pop af
0789+  946A~            	pop hl \ pop de \ pop bc \ pop af
0789+  946A~            	pop hl \ pop de \ pop bc \ pop af
0790+  946A~            
0791+  946A~            	ei
0792+  946A~            	ret
0793+  946A~            
0794+  946A~            Gray4agrayint:
0795+  946A~            	.db 0
0796+  946A~            Gray4afc_masktable:
0797+  946A~            	.db %01000100, %10101010, %00100010, %01010101
0798+  946A~            	.db %00010001, %10101010, %10001000, %01010101
0799+  946A~            
0800+  946A~            	.db %01000100, %10101010, %00100010, %01010101
0801+  946A~            	.db %00010001, %10101010, %10001000, %01010101
0802+  946A~            
0803+  946A~            
0804+  946A             #endif
0805+  946A             
0806+  946A             
0807+  946A             #ifndef VTI
0808+  946A             
0809+  946A F5          	push af \ push bc \ push de \ push hl
0809+  946B C5          
0809+  946C D5          
0809+  946D E5          
0810+  946E             	
0811+  946E             Gray4fastCopy:
0812+  946E 3E 80       	ld	a,$80
0813+  9470 D3 10       	out	($10),a
0814+  9472             
0815+  9472 D9          	exx
0816+  9473 21 B1 9C    	ld	hl,gActivebuf2-12-(-(12*64)+1)
0817+  9476 D9          	exx
0818+  9477             
0819+  9477 21 B1 99    	ld	hl,gActivebuf1-12-(-(12*64)+1)
0820+  947A 3E 20       	ld	a,$20
0821+  947C 4F          	ld	c,a
0822+  947D             
0823+  947D             Gray4fastCopyAgain:
0824+  947D             
0825+  947D 06 15       	ld	b,21
0826+  947F             
0827+  947F             	;=== x-loop
0828+  947F 0C          	inc	c
0829+  9480 11 01 FD    	ld	de,-(12*64)+1
0830+  9483 D3 10       	out	($10),a
0831+  9485 19          	add	hl,de
0832+  9486 11 0C 00    	ld	de,12
0833+  9489             
0834+  9489 D9          	exx	
0835+  948A 11 01 FD    	ld	de,-(12*64)+1
0836+  948D 19          	add	hl,de
0837+  948E 11 0C 00    	ld	de,12
0838+  9491 D9          	exx
0839+  9492             
0840+  9492             Gray4fastCopyLoop:
0841+  9492             	;===y-loop
0842+  9492 C5          	push bc
0843+  9493             
0844+  9493             ;-------------------------
0845+  9493 D9          	exx
0846+  9494 19          	add	hl,de
0847+  9495 7E          	ld	a,(hl)
0848+  9496             Gray4fc_moda1:
0849+  9496 E6 92       	and	%10010010
0850+  9498 D9          	exx
0851+  9499 19          	add	hl,de
0852+  949A 47          	ld	b,a
0853+  949B 7E          	ld	a,(hl)
0854+  949C             Gray4fc_moda2:
0855+  949C E6 6D       	and	%01101101
0856+  949E B0          	or	b
0857+  949F D3 11       	out	($11),a
0858+  94A1             ;-------------------------
0859+  94A1 D9          	exx
0860+  94A2 19          	add	hl,de
0861+  94A3 7E          	ld	a,(hl)
0862+  94A4             Gray4fc_modb1:
0863+  94A4 E6 49       	and	%01001001
0864+  94A6 D9          	exx
0865+  94A7 19          	add	hl,de
0866+  94A8 47          	ld	b,a
0867+  94A9 7E          	ld	a,(hl)
0868+  94AA             Gray4fc_modb2:
0869+  94AA E6 B6       	and	%10110110
0870+  94AC B0          	or	b
0871+  94AD D3 11       	out	($11),a
0872+  94AF             ;-------------------------
0873+  94AF D9          	exx
0874+  94B0 19          	add	hl,de
0875+  94B1 7E          	ld	a,(hl)
0876+  94B2             Gray4fc_modc1:
0877+  94B2 E6 24       	and	%00100100
0878+  94B4 D9          	exx
0879+  94B5 19          	add	hl,de
0880+  94B6 47          	ld	b,a
0881+  94B7 7E          	ld	a,(hl)
0882+  94B8             Gray4fc_modc2:
0883+  94B8 E6 DB       	and	%11011011
0884+  94BA B0          	or	b
0885+  94BB D3 11       	out	($11),a
0886+  94BD             ;----------------
0887+  94BD             
0888+  94BD C1          	pop bc
0889+  94BE 10 D2       	djnz	Gray4fastCopyLoop
0890+  94C0             	;===end y-loop
0891+  94C0             
0892+  94C0 C5          	push bc
0893+  94C1 D9          	exx
0894+  94C2 19          	add	hl,de
0895+  94C3 7E          	ld	a,(hl)
0896+  94C4             Gray4fc_modd1:
0897+  94C4 E6 92       	and	%10010010
0898+  94C6 D9          	exx
0899+  94C7 19          	add	hl,de
0900+  94C8 47          	ld	b,a
0901+  94C9 7E          	ld	a,(hl)
0902+  94CA             Gray4fc_modd2:
0903+  94CA E6 6D       	and	%01101101
0904+  94CC B0          	or	b
0905+  94CD D3 11       	out	($11),a
0906+  94CF C1          	pop bc
0907+  94D0             
0908+  94D0 79          	ld	a,c
0909+  94D1 FE 2C       	cp	$2B+1
0910+  94D3 20 A8       	jr	nz,Gray4fastCopyAgain
0911+  94D5             	;===end x-loop
0912+  94D5             
0913+  94D5 3A 1B 95    	ld a,(Gray4grayint)
0914+  94D8 3C          	inc a
0915+  94D9 FE 03       	cp 3 \ jr nz,Gray4fc_grayintinc
0915+  94DB 20 01       
0916+  94DD AF          	xor a
0917+  94DE             Gray4fc_grayintinc:
0918+  94DE 32 1B 95    	ld (Gray4grayint),a
0919+  94E1 21 1C 95    	ld hl,Gray4fc_masktable
0920+  94E4 06 00       	ld b,0 \ ld c,a
0920+  94E6 4F          
0921+  94E7 09          	add hl,bc
0922+  94E8             
0923+  94E8             	;first
0924+  94E8 7E          	ld a,(hl)
0925+  94E9 32 97 94    	ld (Gray4fc_moda1+1),a
0926+  94EC 32 C5 94    	ld (Gray4fc_modd1+1),a
0927+  94EF 2F          	cpl
0928+  94F0 32 9D 94    	ld (Gray4fc_moda2+1),a
0929+  94F3 32 CB 94    	ld (Gray4fc_modd2+1),a
0930+  94F6 23          	inc hl
0931+  94F7             
0932+  94F7             	;second
0933+  94F7 7E          	ld a,(hl)
0934+  94F8 32 A5 94    	ld (Gray4fc_modb1+1),a
0935+  94FB 2F          	cpl
0936+  94FC 32 AB 94    	ld (Gray4fc_modb2+1),a
0937+  94FF 23          	inc hl
0938+  9500             
0939+  9500             	;third
0940+  9500 7E          	ld a,(hl)
0941+  9501 32 B3 94    	ld (Gray4fc_modc1+1),a
0942+  9504 2F          	cpl
0943+  9505 32 B9 94    	ld (Gray4fc_modc2+1),a
0944+  9508             		
0945+  9508 3A BE 93    	ld a,(interfrequency) \ out ($04),a
0945+  950B D3 04       
0946+  950D 3E 08       	ld a,$08 \ out ($03),a
0946+  950F D3 03       
0947+  9511 3E 0A       	ld a,$0A \ out ($03),a
0947+  9513 D3 03       
0948+  9515             
0949+  9515 E1          	pop hl \ pop de \ pop bc \ pop af
0949+  9516 D1          
0949+  9517 C1          
0949+  9518 F1          
0950+  9519             
0951+  9519 FB          	ei
0952+  951A C9          	ret
0953+  951B             
0954+  951B             Gray4grayint:
0955+  951B 00          	.db 0
0956+  951C             Gray4fc_masktable:
0957+  951C 9249249249  	.db %10010010, %01001001, %00100100, %10010010, %01001001
0958+  9521             
0959+  9521~            #else
0960+  9521~            
0961+  9521~            ;==========================================================
0962+  9521~            ; SPECIAL VTI GRAYSCALE
0963+  9521~            ;==========================================================
0964+  9521~            
0965+  9521~            	push af \ push bc \ push de \ push hl
0965+  9521~            	push af \ push bc \ push de \ push hl
0965+  9521~            	push af \ push bc \ push de \ push hl
0965+  9521~            	push af \ push bc \ push de \ push hl
0966+  9521~            
0967+  9521~            vtifastCopy:
0968+  9521~            	di
0969+  9521~            	ld	a,$80				; 7
0970+  9521~            	out	($10),a				; 11
0971+  9521~            	ld a,(vtigrayint)
0972+  9521~            	or a \ jr z,vtiBuf2
0972+  9521~            	or a \ jr z,vtiBuf2
0973+  9521~            vtiBuf1:
0974+  9521~            	ld	hl,gActivebuf1-12-(-(12*64)+1)	
0975+  9521~            	jr vtia
0976+  9521~            vtiBuf2:
0977+  9521~            	ld	hl,gActivebuf2-12-(-(12*64)+1)	
0978+  9521~            vtia:
0979+  9521~            
0980+  9521~            	ld	a,$20				; 7
0981+  9521~            	ld	c,a				; 4
0982+  9521~            vtifastCopyAgain:
0983+  9521~            	ld	b,64				; 7
0984+  9521~            	inc	c				; 4
0985+  9521~            	ld	de,-(12*64)+1			; 10
0986+  9521~            	out	($10),a				; 11
0987+  9521~            	add	hl,de				; 11
0988+  9521~            	ld	de,12				; 10
0989+  9521~            vtifastCopyLoop:
0990+  9521~            	add	hl,de				; 11
0991+  9521~            	inc hl
0992+  9521~            	dec hl					; 6
0993+  9521~            	ld	a,(hl)				; 7
0994+  9521~            	out	($11),a				; 11
0995+  9521~            						; 6
0996+  9521~            	djnz	vtifastCopyLoop			; 13/8
0997+  9521~            	ld	a,c				; 4
0998+  9521~            	cp	$2B+1				; 7
0999+  9521~            	jr	nz,vtifastCopyAgain		; 10/1
1000+  9521~            
1001+  9521~            	ld a,(vtigrayint)
1002+  9521~            	inc a
1003+  9521~            	cp 3 \ jr nz,vtib
1003+  9521~            	cp 3 \ jr nz,vtib
1004+  9521~            	xor a
1005+  9521~            vtib:	ld (vtigrayint),a
1006+  9521~            
1007+  9521~            	ld a,(interfrequency) \ out ($04),a
1007+  9521~            	ld a,(interfrequency) \ out ($04),a
1008+  9521~            	ld a,$08 \ out ($03),a
1008+  9521~            	ld a,$08 \ out ($03),a
1009+  9521~            	ld a,$0A \ out ($03),a
1009+  9521~            	ld a,$0A \ out ($03),a
1010+  9521~            	pop hl \ pop de \ pop bc \ pop af
1010+  9521~            	pop hl \ pop de \ pop bc \ pop af
1010+  9521~            	pop hl \ pop de \ pop bc \ pop af
1010+  9521~            	pop hl \ pop de \ pop bc \ pop af
1011+  9521~            	ei
1012+  9521~            	ret
1013+  9521~            
1014+  9521~            vtigrayint:
1015+  9521~            	.db 0
1016+  9521             #endif
1017+  9521             
1018+  9521             ;==========================================================
1019+  9521             ; gsGetK
1020+  9521             ;==========================================================
1021+  9521             gsGetK:
1022+  9521 C5          	push bc
1023+  9522 D5          	push de
1024+  9523 E5          	push hl
1025+  9524             gs_GetK2:
1026+  9524 06 07       	ld b,7
1027+  9526             gs_GetK_loop:
1028+  9526             
1029+  9526 3E 07       	ld a,7
1030+  9528 90          	sub b
1031+  9529 21 8D 95    	ld hl,gs_keygroups
1032+  952C 16 00       	ld d,0 \ ld e,a
1032+  952E 5F          
1033+  952F 19          	add hl,de
1034+  9530 7E          	ld a,(hl)
1035+  9531 4F          	ld c,a
1036+  9532             
1037+  9532 3E FF       	ld a,0ffh           ;resets the keypad.
1038+  9534 D3 01       	out (1),a           ;'Required syntax' :)
1039+  9536 79          	ld a,c
1040+  9537 D3 01       	out (1),a
1041+  9539 DB 01       	in a,(1)            ;'Required Syntax'
1042+  953B             
1043+  953B 11 00 00    	ld de,0
1044+  953E FE FE       	cp 254 \ jr z,gs_GetK_254
1044+  9540 28 2B       
1045+  9542 FE FD       	cp 253 \ jr z,gs_GetK_253
1045+  9544 28 26       
1046+  9546 FE FB       	cp 251 \ jr z,gs_GetK_251
1046+  9548 28 21       
1047+  954A FE F7       	cp 247 \ jr z,gs_GetK_247
1047+  954C 28 1C       
1048+  954E FE EF       	cp 239 \ jr z,gs_GetK_239
1048+  9550 28 17       
1049+  9552 FE DF       	cp 223 \ jr z,gs_GetK_223
1049+  9554 28 12       
1050+  9556 FE BF       	cp 191 \ jr z,gs_GetK_191
1050+  9558 28 0D       
1051+  955A FE 7F       	cp 127 \ jr z,gs_GetK_127
1051+  955C 28 08       
1052+  955E             
1053+  955E             gs_GetK_loopend:
1054+  955E             
1055+  955E 10 C6       	djnz gs_GetK_loop
1056+  9560             
1057+  9560 AF          	xor a
1058+  9561 32 CC 95    	ld (gs_keymem),a
1059+  9564 18 23       	jr gs_GetK_end
1060+  9566             
1061+  9566             gs_GetK_127:
1062+  9566 1C          	inc e
1063+  9567             gs_GetK_191:
1064+  9567 1C          	inc e
1065+  9568             gs_GetK_223:
1066+  9568 1C          	inc e
1067+  9569             gs_GetK_239:
1068+  9569 1C          	inc e
1069+  956A             gs_GetK_247:
1070+  956A 1C          	inc e
1071+  956B             gs_GetK_251:
1072+  956B 1C          	inc e
1073+  956C             gs_GetK_253:
1074+  956C 1C          	inc e
1075+  956D             gs_GetK_254:
1076+  956D             
1077+  956D D5          	push de
1078+  956E 3E 07       	ld a,7
1079+  9570 90          	sub b
1080+  9571 87          	add a,a \ add a,a \ add a,a
1080+  9572 87          
1080+  9573 87          
1081+  9574 16 00       	ld d,0 \ ld e,a
1081+  9576 5F          
1082+  9577 21 94 95    	ld hl,gs_keygroup1
1083+  957A 19          	add hl,de
1084+  957B D1          	pop de
1085+  957C 19          	add hl,de
1086+  957D 7E          	ld a,(hl)
1087+  957E             
1088+  957E             	;push hl
1089+  957E             	;push de
1090+  957E             	;push af
1091+  957E             	;bcall(_puts)
1092+  957E             	;ld	hl,2567
1093+  957E             	;ld	(currow),hl
1094+  957E             	;ld	h,0
1095+  957E             	;ld	l,a
1096+  957E             	;bcall(_disphl)
1097+  957E             	;pop af
1098+  957E             	;pop de
1099+  957E             	;pop hl
1100+  957E             
1101+  957E 57          	ld d,a
1102+  957F 3A CC 95    	ld a,(gs_keymem)
1103+  9582 BA          	cp d \ jr z,gs_getK_end
1103+  9583 28 04       
1104+  9585 7A          	ld a,d
1105+  9586 32 CC 95    	ld (gs_keymem),a
1106+  9589             
1107+  9589             
1108+  9589             gs_GetK_end:
1109+  9589             
1110+  9589             ;	ld b,255
1111+  9589             ;gs_GetK_endloopc:
1112+  9589             ;	push bc
1113+  9589             ;	ld b,255
1114+  9589             ;gs_Getk_endloopa:
1115+  9589             ;	push bc
1116+  9589             ;	ld b,255
1117+  9589             ;gs_GetK_endloopb:
1118+  9589             ;	push hl
1119+  9589             ;	pop hl
1120+  9589             ;	djnz gs_GetK_endloopb
1121+  9589             ;	pop bc
1122+  9589             ;	djnz gs_GetK_endloopa
1123+  9589             ;	pop bc
1124+  9589             ;	djnz gs_GetK_endloopc
1125+  9589             
1126+  9589 E1          	pop hl
1127+  958A D1          	pop de
1128+  958B C1          	pop bc
1129+  958C C9          	ret
1130+  958D             
1131+  958D             gs_keygroups:
1132+  958D FEFDFBF7EFDF	.db $fe, $fd, $fb, $f7, $ef, $df, $bf
1132+  9593 BF
1133+  9594             gs_keygroup1:
1134+  9594 010203040000	.db 01h, 02h, 03h, 04h, 00h, 00h, 00h, 00h
1134+  959A 0000
1135+  959C             gs_keygroup2:
1136+  959C 090A0B0C0D00	.db 09h, 0Ah, 0Bh, 0Ch, 0Dh, 00h, 0Fh, 00h
1136+  95A2 0F00
1137+  95A4             gs_keygroup3:
1138+  95A4 8C1213141516	.db 8Ch, 12h, 13h, 14h, 15h, 16h, 17h, 00h
1138+  95AA 1700
1139+  95AC             gs_keygroup4:
1140+  95AC 8D1A1B1C1D1E	.db 8Dh, 1Ah, 1Bh, 1Ch, 1Dh, 1Eh, 1Fh, 20h
1140+  95B2 1F20
1141+  95B4             gs_keygroup5:
1142+  95B4 212223242526	.db 21h, 22h, 23h, 24h, 25h, 26h, 27h, 28h
1142+  95BA 2728
1143+  95BC             gs_keygroup6:
1144+  95BC 002A2B2C2D2E	.db 00h, 2Ah, 2Bh, 2Ch, 2Dh, 2Eh, 2Fh, 30h
1144+  95C2 2F30
1145+  95C4             gs_keygroup7:
1146+  95C4 313233343536	.db 31h, 32h, 33h, 34h, 35h, 36h, 37h, 38h 
1146+  95CA 3738
1147+  95CC             gs_keymem:
1148+  95CC 00          	.db 0
1149+  95CD             
1150+  95CD             ;==========================================================
1151+  95CD             ; gsSetFreq
1152+  95CD             ;==========================================================
1153+  95CD             ; call this routine to set up the interrupt frequency.
1154+  95CD             gsSetFreq:
1155+  95CD             
1156+  95CD             gsSetFreq_loop:
1157+  95CD             	;=== create upper line, 10 bytes
1158+  95CD 21 5D 90    	ld hl,gBuf1+(47*12)
1159+  95D0 11 99 84    	ld de,gBuf2+(47*12)
1160+  95D3 3E FF       	ld a,%11111111
1161+  95D5 06 0C       	ld b,12
1162+  95D7             gsSetFreq_a:
1163+  95D7 77          	ld (hl),a
1164+  95D8 23          	inc hl
1165+  95D9 12          	ld (de),a
1166+  95DA 13          	inc de
1167+  95DB 10 FA       	djnz gsSetFreq_a
1168+  95DD             
1169+  95DD             	;=== clear the used area
1170+  95DD 21 69 90    	ld hl,gBuf1+(48*12)
1171+  95E0 11 6A 90    	ld de,gBuf1+(48*12)+1
1172+  95E3 36 00       	ld (hl),0
1173+  95E5 01 CB 00    	ld bc,(12*17)-1
1174+  95E8 ED B0       	ldir
1175+  95EA             	;=== clear the used area
1176+  95EA 21 A5 84    	ld hl,gBuf2+(48*12)
1177+  95ED 11 A6 84    	ld de,gBuf2+(48*12)+1
1178+  95F0 36 00       	ld (hl),0
1179+  95F2 01 CB 00    	ld bc,(12*17)-1
1180+  95F5 ED B0       	ldir
1181+  95F7             
1182+  95F7             	
1183+  95F7             	;=== set buffer text
1184+  95F7 FD CB 14 FE 	set textwrite,(iy+sgrflags)
1185+  95FB             
1186+  95FB             	;=== draw the texts
1187+  95FB 21 0A 31    	ld	hl,49*256 + 10
1188+  95FE 22 52 82    	ld	(pencol),hl
1189+  9601 21 91 96    	ld	hl,gsSetFreq_text
1190+  9604 CD 81 47    	bcall(_vputs)
1191+  9607 21 12 39    	ld	hl,57*256 + 18
1192+  960A 22 52 82    	ld	(pencol),hl
1193+  960D 21 AA 96    	ld	hl,gsSetFreq_zerot
1194+  9610 CD 81 47    	bcall(_vputs)
1195+  9613 21 22 39    	ld	hl,57*256 + 34
1196+  9616 22 52 82    	ld	(pencol),hl
1197+  9619 21 AC 96    	ld	hl,gsSetFreq_twot
1198+  961C CD 81 47    	bcall(_vputs)
1199+  961F 21 32 39    	ld	hl,57*256 + 50
1200+  9622 22 52 82    	ld	(pencol),hl
1201+  9625 21 AE 96    	ld	hl,gsSetFreq_fourt
1202+  9628 CD 81 47    	bcall(_vputs)
1203+  962B 21 42 39    	ld	hl,57*256 + 66
1204+  962E 22 52 82    	ld	(pencol),hl
1205+  9631 21 B0 96    	ld	hl,gsSetFreq_sixt
1206+  9634 CD 81 47    	bcall(_vputs)
1207+  9637 CD 31 94    	call gsEnable
1208+  963A             
1209+  963A             	;=== draw the cursor
1210+  963A 21 D5 90    	ld hl,gBuf1+(57*12)
1211+  963D 06 00       	ld b,0
1212+  963F 3A BE 93    	ld a,(interfrequency)
1213+  9642 C6 02       	add a,2
1214+  9644 4F          	ld c,a
1215+  9645 09          	add hl,bc
1216+  9646 06 07       	ld b,7
1217+  9648 3E FF       	ld a,255
1218+  964A 11 0C 00    	ld de,12
1219+  964D             gsSetFreq_cursorloop:
1220+  964D 7E          	ld a,(hl)
1221+  964E 2F          	cpl
1222+  964F 77          	ld (hl),a
1223+  9650 19          	add hl,de
1224+  9651 10 FA       	djnz gsSetFreq_cursorloop
1225+  9653 CD 1A 94    	call gsCopyBuffer
1226+  9656             
1227+  9656             
1228+  9656             	;=== wait for key input
1229+  9656             gsSetFreq_waitkey:
1230+  9656 CD 21 95    	call gsGetk
1231+  9659 B7          	or a \ jr z,gsSetFreq_waitkey
1231+  965A 28 FA       
1232+  965C FE 09       	cp gEnter \ ret z
1232+  965E C8          
1233+  965F FE 21       	cp g0 \ jr z,gsSetFreq_zero
1233+  9661 28 0F       
1234+  9663 FE 1A       	cp g2 \ jr z,gsSetFreq_two
1234+  9665 28 12       
1235+  9667 FE 23       	cp g4 \ jr z,gsSetFreq_four
1235+  9669 28 16       
1236+  966B FE 13       	cp g6 \ jr z,gsSetFreq_six
1236+  966D 28 1A       
1237+  966F C3 CD 95    	jp gsSetFreq_loop
1238+  9672             
1239+  9672             gsSetFreq_zero:
1240+  9672 AF          	xor a
1241+  9673 32 BE 93    	ld (interfrequency),a
1242+  9676 C3 CD 95    	jp gsSetFreq_loop
1243+  9679             gsSetFreq_two:
1244+  9679 3E 02       	ld a,2
1245+  967B 32 BE 93    	ld (interfrequency),a
1246+  967E C3 CD 95    	jp gsSetFreq_loop
1247+  9681             gsSetFreq_four:
1248+  9681 3E 04       	ld a,4
1249+  9683 32 BE 93    	ld (interfrequency),a
1250+  9686 C3 CD 95    	jp gsSetFreq_loop
1251+  9689             gsSetFreq_six:
1252+  9689 3E 06       	ld a,6
1253+  968B 32 BE 93    	ld (interfrequency),a
1254+  968E C3 CD 95    	jp gsSetFreq_loop
1255+  9691             	
1256+  9691 73657420696EgsSetFreq_text:	.db "set interrupt frequency:",0
1256+  9697 74657272757074206672657175656E63793A00
1257+  96AA 30 00       gsSetFreq_zerot:	.db "0",0
1258+  96AC 32 00       gsSetFreq_twot:		.db "2",0
1259+  96AE 34 00       gsSetFreq_fourt:	.db "4",0
1260+  96B0 36 00       gsSetFreq_sixt:		.db "6",0
1261+  96B2             
1262+  96B2             ;==========================================================
1263+  96B2             ; gsbuf1Tobuf2
1264+  96B2             ;==========================================================
1265+  96B2             ; copies buffer 1 to buffer 2
1266+  96B2             gsbuf1Tobuf2:
1267+  96B2 21 29 8E    	ld hl,gbuf1
1268+  96B5 11 65 82    	ld de,gbuf2
1269+  96B8 01 00 03    	ld bc,768
1270+  96BB ED B0       	ldir
1271+  96BD C9          	ret
1272+  96BE             
1273+  96BE             #ifndef NODOUBLEBUFFER
1274+  96BE             gActivebuf1:
1275+  96BE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1275+  96C4 000000000000000000000000000000000000
1276+  96D6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1276+  96DC 000000000000000000000000000000000000
1277+  96EE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1277+  96F4 000000000000000000000000000000000000
1278+  9706 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1278+  970C 000000000000000000000000000000000000
1279+  971E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1279+  9724 000000000000000000000000000000000000
1280+  9736 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1280+  973C 000000000000000000000000000000000000
1281+  974E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1281+  9754 000000000000000000000000000000000000
1282+  9766 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1282+  976C 000000000000000000000000000000000000
1283+  977E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1283+  9784 000000000000000000000000000000000000
1284+  9796 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1284+  979C 000000000000000000000000000000000000
1285+  97AE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1285+  97B4 000000000000000000000000000000000000
1286+  97C6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1286+  97CC 000000000000000000000000000000000000
1287+  97DE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1287+  97E4 000000000000000000000000000000000000
1288+  97F6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1288+  97FC 000000000000000000000000000000000000
1289+  980E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1289+  9814 000000000000000000000000000000000000
1290+  9826 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1290+  982C 000000000000000000000000000000000000
1291+  983E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1291+  9844 000000000000000000000000000000000000
1292+  9856 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1292+  985C 000000000000000000000000000000000000
1293+  986E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1293+  9874 000000000000000000000000000000000000
1294+  9886 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1294+  988C 000000000000000000000000000000000000
1295+  989E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1295+  98A4 000000000000000000000000000000000000
1296+  98B6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1296+  98BC 000000000000000000000000000000000000
1297+  98CE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1297+  98D4 000000000000000000000000000000000000
1298+  98E6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1298+  98EC 000000000000000000000000000000000000
1299+  98FE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1299+  9904 000000000000000000000000000000000000
1300+  9916 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1300+  991C 000000000000000000000000000000000000
1301+  992E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1301+  9934 000000000000000000000000000000000000
1302+  9946 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1302+  994C 000000000000000000000000000000000000
1303+  995E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1303+  9964 000000000000000000000000000000000000
1304+  9976 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1304+  997C 000000000000000000000000000000000000
1305+  998E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1305+  9994 000000000000000000000000000000000000
1306+  99A6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1306+  99AC 000000000000000000000000000000000000
1307+  99BE             gActivebuf2:
1308+  99BE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1308+  99C4 000000000000000000000000000000000000
1309+  99D6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1309+  99DC 000000000000000000000000000000000000
1310+  99EE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1310+  99F4 000000000000000000000000000000000000
1311+  9A06 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1311+  9A0C 000000000000000000000000000000000000
1312+  9A1E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1312+  9A24 000000000000000000000000000000000000
1313+  9A36 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1313+  9A3C 000000000000000000000000000000000000
1314+  9A4E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1314+  9A54 000000000000000000000000000000000000
1315+  9A66 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1315+  9A6C 000000000000000000000000000000000000
1316+  9A7E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1316+  9A84 000000000000000000000000000000000000
1317+  9A96 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1317+  9A9C 000000000000000000000000000000000000
1318+  9AAE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1318+  9AB4 000000000000000000000000000000000000
1319+  9AC6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1319+  9ACC 000000000000000000000000000000000000
1320+  9ADE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1320+  9AE4 000000000000000000000000000000000000
1321+  9AF6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1321+  9AFC 000000000000000000000000000000000000
1322+  9B0E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1322+  9B14 000000000000000000000000000000000000
1323+  9B26 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1323+  9B2C 000000000000000000000000000000000000
1324+  9B3E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1324+  9B44 000000000000000000000000000000000000
1325+  9B56 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1325+  9B5C 000000000000000000000000000000000000
1326+  9B6E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1326+  9B74 000000000000000000000000000000000000
1327+  9B86 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1327+  9B8C 000000000000000000000000000000000000
1328+  9B9E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1328+  9BA4 000000000000000000000000000000000000
1329+  9BB6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1329+  9BBC 000000000000000000000000000000000000
1330+  9BCE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1330+  9BD4 000000000000000000000000000000000000
1331+  9BE6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1331+  9BEC 000000000000000000000000000000000000
1332+  9BFE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1332+  9C04 000000000000000000000000000000000000
1333+  9C16 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1333+  9C1C 000000000000000000000000000000000000
1334+  9C2E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1334+  9C34 000000000000000000000000000000000000
1335+  9C46 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1335+  9C4C 000000000000000000000000000000000000
1336+  9C5E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1336+  9C64 000000000000000000000000000000000000
1337+  9C76 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1337+  9C7C 000000000000000000000000000000000000
1338+  9C8E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1338+  9C94 000000000000000000000000000000000000
1339+  9CA6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1339+  9CAC 000000000000000000000000000000000000
1340+  9CBE             #endif
1341+  9CBE             
0120   9CBE             
0121   9CBE             ;==========================================================
0122   9CBE             ; ballsprite
0123   9CBE             ;==========================================================
0124   9CBE             ballsprite:
0125   9CBE 3C76E3F1FBFF .db $3C,$76,$E3,$F1,$FB,$FF,$7E,$3C,$3C,$6A,$D5,$EB,$F5,$FB,$7E,$3C
0125   9CC4 7E3C3C6AD5EBF5FB7E3C
0126   9CCE             
0127   9CCE             
0128   9CCE             
0129   9CCE             
0130   9CCE             
0131   9CCE             .end
0132   9CCE             END
0133   9CCE             
tasm: Number of errors = 0
