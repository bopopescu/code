0001   0000             #define TI83 
0002   0000             ;==========================================================
0003   0000             ;Header
0004   0000             ;==========================================================
0011   0000                     .list
0012   0000             
0013   0000~            #ifdef  TI83P
0014   0000~                    .org    progstart-2
0015   0000~                    .db     $BB,$6D
0016   0000             #else
0017   9327                     .org    progstart
0018   9327             #endif
0019   9327 C9                  ret
0020   9328 30 0D               jr      nc,start_of_program
0021   932A 506963747572        .db     "Picture demo",0
0021   9330 652064656D6F00
0022   9337             
0023   9337             start_of_program:
0024   9337             
0025   9337             ;==========================================================
0026   9337             ; start of program
0027   9337             ;==========================================================
0028   9337 CD 65 93    	call gsClearbuffer
0029   933A CD 97 93    	call gsEnable
0030   933D CD AD 95    	call gsSetFreq
0031   9340             
0032   9340             	;===fill buffers with picture
0033   9340 21 9E 9F    	ld hl,picture_layer1
0034   9343 11 29 8E    	ld de,gbuf1
0035   9346 01 00 03    	ld bc,768
0036   9349 ED B0       	ldir
0037   934B 21 9E 9C    	ld hl,picture_layer2
0038   934E 11 65 82    	ld de,gbuf2
0039   9351 01 00 03    	ld bc,768
0040   9354 ED B0       	ldir
0041   9356             
0042   9356 CD 80 93    	call gsCopyBuffer
0043   9359             
0044   9359             waitkeyloop:
0045   9359 CD 01 95    	call gsGetk
0046   935C FE 0F       	cp gClear \ jr nz,waitkeyloop
0046   935E 20 F9       
0047   9360             
0048   9360             quit:
0049   9360 CD C6 93    	call gsDisable
0050   9363 C9          	ret
0051   9364             
0052   9364             ;==========================================================
0053   9364             ; grayscale include file
0054   9364             ;==========================================================
0055   9364             ; comment these defines in or out to activate/deactivate them
0056   9364             
0057   9364             ;We dont need a double buffer for a picture!
0058   9364             ;#DEFINE NODOUBLEBUFFER	;when on,routines write directly to screen (faster and smaller)
0059   9364             
0060   9364             ;#DEFINE 3LEVELGRAY	;makes it 3-level grayscale (a bit faster)
0061   9364             ;#DEFINE XORSPRITE	;includes gsPutSprite
0062   9364             ;#DEFINE LARGESPRITE	;includes gsLargeSprite
0063   9364             ;#DEFINE ALIGNEDSPRITE	;includes gsAlignedsprite
0064   9364             ;#DEFINE ALIGNEDMASKEDSPRITE
0065   9364             
0066   9364             #include graylib.inc
0001+  9364             ;==========================================================
0002+  9364             ; GRAYSCALE LIBRARY INCLUDE FILE
0003+  9364             ;==========================================================
0004+  9364             ; 11:20 10-11-2002
0005+  9364             ;
0006+  9364             ; by Duck (DP Kingma)
0007+  9364             ; works under ion 83-/83+
0008+  9364             ;
0009+  9364             ; ==DEVELOPER NOTES==
0010+  9364             ;
0011+  9364             ; gsPutSprite	=xor sprite
0012+  9364             ; gsLargeSprite	=large sprite
0013+  9364             ; gsEnable		=enable grayscale
0014+  9364             ; gsDisable		=disable grayscale
0015+  9364             ; gsClearbuffer		=clear buffers
0016+  9364             ; gsCopybuffer		=copies buffers to active buffers (so screen)
0017+  9364             ; gsGetk		=tried to make is same as romcall _getk
0018+  9364             ; gsSetFreq		=set frequency
0019+  9364             ; (grayscale routines)	=the grayscale interrupts, dont activate them yourself ;)
0020+  9364             ;
0021+  9364             ; look at duckgray.txt for information about development!
0022+  9364             
0023+  9364             
0024+  9364             ; interrupt frequency
0025+  9364             ; can be 2, 4 and 6
0026+  9364             
0027+  9364 02          InterFrequency:	.db 2
0028+  9365             
0029+  9365             gbuf1	= gbuf
0030+  9365             gbuf2	= saferam1
0031+  9365             
0032+  9365~            #ifdef NODOUBLEBUFFER
0033+  9365~            gActivebuf1 = gbuf1
0034+  9365~            gActivebuf2 = gbuf2
0035+  9365             #endif 
0036+  9365             
0037+  9365~            #ifdef XORSPRITE
0038+  9365~            ;==========================================================
0039+  9365~            ; gsPutSprite
0040+  9365~            ;==========================================================
0041+  9365~            ;=== gsPutSprite 1.0 by Durk Kingma
0042+  9365~            ;thanks to Joe Wingbermuehle for his ionPutSprite routine
0043+  9365~            ;
0044+  9365~            ; puts XOR grayscale sprite
0045+  9365~            ; b=size of sprite
0046+  9365~            ; l=yc
0047+  9365~            ; a=xc
0048+  9365~            ; ix holds pointer
0049+  9365~            gsPutSprite:
0050+  9365~            
0051+  9365~            	push af
0052+  9365~            	push hl
0053+  9365~            	push bc
0054+  9365~            
0055+  9365~            	call	ionPutSprite
0056+  9365~            
0057+  9365~            	pop bc
0058+  9365~            	pop hl
0059+  9365~            	pop af
0060+  9365~            
0061+  9365~            	ld	e,l
0062+  9365~            	ld	h,$00
0063+  9365~            	ld	d,h
0064+  9365~            	add	hl,de
0065+  9365~            	add	hl,de
0066+  9365~            	add	hl,hl
0067+  9365~            	add	hl,hl
0068+  9365~            	ld	e,a
0069+  9365~            	and	$07
0070+  9365~            	ld	c,a
0071+  9365~            	srl	e
0072+  9365~            	srl	e
0073+  9365~            	srl	e
0074+  9365~            	add	hl,de
0075+  9365~            	ld	de,gbuf2
0076+  9365~            	add	hl,de
0077+  9365~            gsPutSpriteLoop1:
0078+  9365~            pgxs_sl1:	ld	d,(ix)
0079+  9365~            	ld	e,$00
0080+  9365~            	ld	a,c
0081+  9365~            	or	a
0082+  9365~            	jr	z,gsPutSpriteSkip1
0083+  9365~            gsPutSpriteLoop2:
0084+  9365~            	srl	d
0085+  9365~            	rr	e
0086+  9365~            	dec	a
0087+  9365~            	jr	nz,gsPutSpriteLoop2
0088+  9365~            gsPutSpriteSkip1:
0089+  9365~            	ld	a,(hl)
0090+  9365~            	xor	d
0091+  9365~            	ld	(hl),a
0092+  9365~            	inc	hl
0093+  9365~            	ld	a,(hl)
0094+  9365~            	xor	e
0095+  9365~            	ld	(hl),a
0096+  9365~            	ld	de,$0B
0097+  9365~            	add	hl,de
0098+  9365~            	inc	ix
0099+  9365~            	djnz	gsPutSpriteLoop1
0100+  9365~            
0101+  9365~            	ret
0102+  9365             #endif
0103+  9365             
0104+  9365~            #ifdef ALIGNEDSPRITE
0105+  9365~            ;==========================================================
0106+  9365~            ; gsAlignedSprite
0107+  9365~            ;==========================================================
0108+  9365~            ; puts 8x8 aligned sprite
0109+  9365~            ; a=x l=y ix=sprite
0110+  9365~            gsAlignedSprite:
0111+  9365~            	ld h,0
0112+  9365~            	ld d,h
0113+  9365~            	ld e,l
0114+  9365~            	add hl,de
0115+  9365~            	add hl,de
0116+  9365~            	add hl,hl
0117+  9365~            	add hl,hl
0118+  9365~            	ld e,a
0119+  9365~            	add hl,de
0120+  9365~            	push hl
0121+  9365~            	ld de,gbuf1
0122+  9365~            	add hl,de
0123+  9365~            	;now we got right spot in hl
0124+  9365~            	ld de,12
0125+  9365~            	ld b,8
0126+  9365~            gsAlignedSprite_loopbuf1:
0127+  9365~            	ld a,(ix)
0128+  9365~            	ld (hl),a
0129+  9365~            	add hl,de
0130+  9365~            	inc ix
0131+  9365~            	djnz gsAlignedSprite_loopbuf1
0132+  9365~            
0133+  9365~            	pop hl
0134+  9365~            	ld de,gbuf2
0135+  9365~            	add hl,de
0136+  9365~            	ld de,12
0137+  9365~            	ld b,8
0138+  9365~            gsAlignedSprite_loopbuf2:
0139+  9365~            	ld a,(ix)
0140+  9365~            	ld (hl),a
0141+  9365~            	add hl,de
0142+  9365~            	inc ix
0143+  9365~            	djnz gsAlignedSprite_loopbuf2
0144+  9365~            	ret
0145+  9365             #endif
0146+  9365             
0147+  9365~            #IFDEF ALIGNEDMASKEDSPRITE
0148+  9365~            ;==========================================================
0149+  9365~            ; gsAlignedMaskedSprite
0150+  9365~            ;==========================================================
0151+  9365~            ; mask/draw 8x8 aligned sprite
0152+  9365~            ; a=number + 64*(HORIZFLIP) + 128*(VERTFLIP)
0153+  9365~            ; h=x l=y de=sprite table
0154+  9365~            ; output: everything destroyed, but ix=ix+8
0155+  9365~            gsAlignedMaskedSprite:
0156+  9365~            	push hl
0157+  9365~            	push af
0158+  9365~            	and %00111111
0159+  9365~            
0160+  9365~            	ld h,0 \ ld l,a
0160+  9365~            	ld h,0 \ ld l,a
0161+  9365~            	add hl,hl
0162+  9365~            	add hl,hl
0163+  9365~            	add hl,hl
0164+  9365~            	add hl,hl
0165+  9365~            	add hl,de
0166+  9365~            	;database to temp
0167+  9365~            	ld de,gsTempSprite
0168+  9365~            	ld bc,16
0169+  9365~            	ldir
0170+  9365~            
0171+  9365~            	pop af
0172+  9365~            	bit 6,a \ call nz,gsFlipHoriz
0172+  9365~            	bit 6,a \ call nz,gsFlipHoriz
0173+  9365~            	bit 7,a \ call nz,gsFlipVert ;not working yet
0173+  9365~            	bit 7,a \ call nz,gsFlipVert ;not working yet
0174+  9365~            	ld ix,gsTempSprite
0175+  9365~            	pop hl
0176+  9365~            	ld a,h
0177+  9365~            
0178+  9365~            	ld h,0
0179+  9365~            	ld b,h
0180+  9365~            	ld c,l
0181+  9365~            	add hl,bc
0182+  9365~            	add hl,bc
0183+  9365~            	add hl,hl
0184+  9365~            	add hl,hl
0185+  9365~            	ld c,a
0186+  9365~            	add hl,bc
0187+  9365~            	ld b,h \ ld c,l
0187+  9365~            	ld b,h \ ld c,l
0188+  9365~            
0189+  9365~            	ld hl,gbuf2
0190+  9365~            	add hl,bc	;de=layer2
0191+  9365~            	ex de,hl
0192+  9365~            	ld hl,gbuf1
0193+  9365~            	add hl,bc	;hl=layer1
0194+  9365~            
0195+  9365~            	ld b,8
0196+  9365~            gsMaskedSprite_loop:
0197+  9365~            	push bc
0198+  9365~            
0199+  9365~            	push ix
0200+  9365~            
0201+  9365~            	ld a,(ix) ;get spr1
0202+  9365~            	ld bc,8
0203+  9365~            	add ix,bc
0204+  9365~            	ld c,a	  ;save spr1
0205+  9365~            	
0206+  9365~            	ld a,(ix) ;get spr2
0207+  9365~            	push af
0208+  9365~            	cpl	  ;flip spr2
0209+  9365~            	and c	  ;mask ready
0210+  9365~            	ld b,a	  ;save
0211+  9365~            
0212+  9365~            	cpl	  ;flip mask
0213+  9365~            	and c	  ;mask spr1
0214+  9365~            	ld c,a	  ;save spr1
0215+  9365~            
0216+  9365~            	ld a,b
0217+  9365~            	and (hl)  ;mask layer1
0218+  9365~            	or c	  ;draw sprite
0219+  9365~            	ld (hl),a ;save
0220+  9365~            
0221+  9365~            	ld a,b
0222+  9365~            	cpl
0223+  9365~            	ld b,a
0224+  9365~            
0225+  9365~            	pop af	  ;get spr2
0226+  9365~            	and b	  ;mask spr2
0227+  9365~            	ld c,a
0228+  9365~            	
0229+  9365~            	ld a,b	  ;flip mask
0230+  9365~            	cpl
0231+  9365~            
0232+  9365~            	ex de,hl  ;ex layer1/2
0233+  9365~            	and (hl)  ;mask layer2
0234+  9365~            	or c	  ;draw sprite
0235+  9365~            	ld (hl),a ;save
0236+  9365~            
0237+  9365~            	ld bc,12
0238+  9365~            	add hl,bc
0239+  9365~            	ex de,hl  ;ex back
0240+  9365~            	add hl,bc
0241+  9365~            
0242+  9365~            	pop ix
0243+  9365~            	inc ix
0244+  9365~            
0245+  9365~            	pop bc
0246+  9365~            	djnz gsMaskedSprite_loop
0247+  9365~            	ret
0248+  9365~            
0249+  9365~            ;=== horizontal sprite flip
0250+  9365~            gsFlipHoriz:
0251+  9365~            	push af
0252+  9365~            	push hl
0253+  9365~            	ld de,gsTempSprite+7
0254+  9365~            	ld hl,gsTempSprite2
0255+  9365~            	ld b,8
0256+  9365~            gsFlipHoriz_loop:
0257+  9365~            	ld a,(de)
0258+  9365~            	ld (hl),a
0259+  9365~            	dec de
0260+  9365~            	inc hl
0261+  9365~            	djnz gsFlipHoriz_loop
0262+  9365~            	ld bc,16
0263+  9365~            	ex de,hl
0264+  9365~            	add hl,bc
0265+  9365~            	ex de,hl
0266+  9365~            	ld b,8
0267+  9365~            gsFlipHoriz_loop2:
0268+  9365~            	ld a,(de)
0269+  9365~            	ld (hl),a
0270+  9365~            	dec de
0271+  9365~            	inc hl
0272+  9365~            	djnz gsFlipHoriz_loop2
0273+  9365~            	call gsTemp2To1
0274+  9365~            	pop hl
0275+  9365~            	pop af
0276+  9365~            	ret
0277+  9365~            
0278+  9365~            ;=== vertical sprite flip
0279+  9365~            gsFlipVert:
0280+  9365~            	push af
0281+  9365~            	push hl
0282+  9365~            	ld hl,gsTempSprite
0283+  9365~            	ld de,gsTempSprite2
0284+  9365~            	ld b,16
0285+  9365~            gsFlipVert_loop:
0286+  9365~            	ld a,(hl)
0287+  9365~            	ld c,0
0288+  9365~            	rlca
0289+  9365~            	rr c
0290+  9365~            	rlca
0291+  9365~            	rr c
0292+  9365~            	rlca
0293+  9365~            	rr c
0294+  9365~            	rlca
0295+  9365~            	rr c
0296+  9365~            	rlca
0297+  9365~            	rr c
0298+  9365~            	rlca
0299+  9365~            	rr c
0300+  9365~            	rlca
0301+  9365~            	rr c
0302+  9365~            	rlca
0303+  9365~            	rr c
0304+  9365~            	ld a,c
0305+  9365~            	ld (de),a
0306+  9365~            	inc hl
0307+  9365~            	inc de
0308+  9365~            	djnz gsFlipVert_loop
0309+  9365~            	call gsTemp2To1
0310+  9365~            	pop hl
0311+  9365~            	pop af
0312+  9365~            	ret
0313+  9365~            
0314+  9365~            gsTemp2To1:
0315+  9365~            	ld hl,gsTempSprite2
0316+  9365~            	ld de,gsTempSprite
0317+  9365~            	ld bc,16
0318+  9365~            	ldir
0319+  9365~            	ret
0320+  9365~            
0321+  9365~            gsTempSprite:
0322+  9365~            	.db 0,0,0,0,0,0,0,0
0323+  9365~            	.db 0,0,0,0,0,0,0,0
0324+  9365~            gsTempSprite2:
0325+  9365~            	.db 0,0,0,0,0,0,0,0
0326+  9365~            	.db 0,0,0,0,0,0,0,0
0327+  9365~            
0328+  9365~            
0329+  9365             #ENDIF
0330+  9365             
0331+  9365             
0332+  9365~            #ifdef LARGESPRITE
0333+  9365~            ;==========================================================
0334+  9365~            ; gsLargeSprite
0335+  9365~            ;==========================================================
0336+  9365~            ;=== gsLargeSprite 1.0 by Durk Kingma
0337+  9365~            ;thanks to Joe Wingbermuehle for his ionPutSprite routine
0338+  9365~            ;
0339+  9365~            ; puts large Grayscale sprite
0340+  9365~            ; b=size of sprite
0341+  9365~            ; l=yc
0342+  9365~            ; a=xc
0343+  9365~            ; ix holds pointer
0344+  9365~            ;-----> Draw a picture
0345+  9365~            ;Input:	ix->sprite
0346+  9365~            ;	a=x
0347+  9365~            ;	l=y
0348+  9365~            ;	b=height	(in pixels)
0349+  9365~            ;	c=width		(in bytes, e.g. 2 would be 16)
0350+  9365~            ;Output: nothing
0351+  9365~            ; All registers are destroyed except bc', de', hl'
0352+  9365~            gsLargeSprite:
0353+  9365~            
0354+  9365~            	ret
0355+  9365~            
0356+  9365~            	push af
0357+  9365~            	push hl
0358+  9365~            	push bc
0359+  9365~            
0360+  9365~            	call ionLargeSprite
0361+  9365~            
0362+  9365~            	pop bc
0363+  9365~            	pop hl
0364+  9365~            	pop af
0365+  9365~            
0366+  9365~            	di
0367+  9365~            	ex	af,af'
0368+  9365~            	ld	a,c
0369+  9365~            	push	af
0370+  9365~            	ex	af,af'
0371+  9365~            	ld	e,l
0372+  9365~            	ld	h,$00
0373+  9365~            	ld	d,h
0374+  9365~            	add	hl,de ;x12
0375+  9365~            	add	hl,de ;
0376+  9365~            	add	hl,hl ;
0377+  9365~            	add	hl,hl ;
0378+  9365~            	ld	e,a
0379+  9365~            	and	$07
0380+  9365~            	ld	c,a
0381+  9365~            	srl	e
0382+  9365~            	srl	e
0383+  9365~            	srl	e
0384+  9365~            	add	hl,de
0385+  9365~            	ld	de,gbuf2
0386+  9365~            	add	hl,de
0387+  9365~            gsLargeSpriteLoop1:
0388+  9365~            	push	hl
0389+  9365~            gsLargeSpriteLoop2:
0390+  9365~            	ld	d,(ix)
0391+  9365~            	ld	e,$00
0392+  9365~            	ld	a,c
0393+  9365~            	or	a
0394+  9365~            	jr	z,gsLargeSpriteSkip1
0395+  9365~            gsLargeSpriteLoop3:
0396+  9365~            	srl	d
0397+  9365~            	rr	e
0398+  9365~            	dec	a
0399+  9365~            	jr	nz,gsLargeSpriteLoop3
0400+  9365~            gsLargeSpriteSkip1:
0401+  9365~            	ld	a,(hl)
0402+  9365~            	xor	d
0403+  9365~            	ld	(hl),a
0404+  9365~            	inc	hl
0405+  9365~            	ld	a,(hl)
0406+  9365~            	xor	e
0407+  9365~            	ld	(hl),a
0408+  9365~            	inc	ix
0409+  9365~            	ex	af,af'
0410+  9365~            	dec	a
0411+  9365~            	push	af
0412+  9365~            	ex	af,af'
0413+  9365~            	pop	af
0414+  9365~            	jr	nz,gsLargeSpriteLoop2
0415+  9365~            	pop	hl
0416+  9365~            	pop	af
0417+  9365~            	push	af
0418+  9365~            	ex	af,af'
0419+  9365~            	ld	de,$0C
0420+  9365~            	add	hl,de
0421+  9365~            	djnz	gsLargeSpriteLoop1
0422+  9365~            	pop	af
0423+  9365~            
0424+  9365~            	
0425+  9365~            	ld a,(interfrequency) \ out ($04),a
0425+  9365~            	ld a,(interfrequency) \ out ($04),a
0426+  9365~            	ld a,$08 \ out ($03),a
0426+  9365~            	ld a,$08 \ out ($03),a
0427+  9365~            	ld a,$0A \ out ($03),a
0427+  9365~            	ld a,$0A \ out ($03),a
0428+  9365~            	ei
0429+  9365~            	ret
0430+  9365             #endif
0431+  9365             
0432+  9365             ;==========================================================
0433+  9365             ; gsClearbuffer
0434+  9365             ;==========================================================
0435+  9365             gsClearbuffer:
0436+  9365 21 29 8E    	ld hl,gbuf1
0437+  9368 11 2A 8E    	ld de,gbuf1+1
0438+  936B 01 FF 02    	ld bc,767
0439+  936E 36 00       	ld (hl),0
0440+  9370 ED B0       	ldir
0441+  9372 21 65 82    	ld hl,gbuf2
0442+  9375 11 66 82    	ld de,gbuf2+1
0443+  9378 01 FF 02    	ld bc,767
0444+  937B 36 00       	ld (hl),0
0445+  937D ED B0       	ldir
0446+  937F C9          	ret
0447+  9380             
0448+  9380             ;==========================================================
0449+  9380             ; gsCopyBuffer
0450+  9380             ;==========================================================
0451+  9380             gsCopybuffer:
0452+  9380             #ifndef NODOUBLEBUFFER
0453+  9380 21 29 8E    	ld hl,gbuf1
0454+  9383 11 9E 96    	ld de,gActivebuf1
0455+  9386 01 00 03    	ld bc,768
0456+  9389 ED B0       	ldir
0457+  938B 21 65 82    	ld hl,gbuf2
0458+  938E 11 9E 99    	ld de,gActivebuf2
0459+  9391 01 00 03    	ld bc,768
0460+  9394 ED B0       	ldir
0461+  9396             #endif
0462+  9396 C9          	ret
0463+  9397             
0464+  9397             ;==========================================================
0465+  9397             ; gsEnable
0466+  9397             ;==========================================================
0467+  9397             gsEnable:
0468+  9397 21 00 87    	ld hl,8700h
0469+  939A 11 01 87    	ld de,8700h+1
0470+  939D 01 00 01    	ld bc,256
0471+  93A0 36 86       	ld (hl),86h
0472+  93A2 ED B0       	ldir
0473+  93A4             
0474+  93A4 21 CF 93    	ld hl,interrupt_start
0475+  93A7 11 86 86    	ld de,8686h
0476+  93AA 01 03 00    	ld bc,INTERRUPT_end-interrupt_start
0477+  93AD ED B0       	ldir
0478+  93AF 3E 87       	ld a,87h
0479+  93B1 ED 47       	ld i,a
0480+  93B3             
0481+  93B3 ED 5E       	im 2
0482+  93B5             
0483+  93B5 3A 64 93    	ld a,(interfrequency) \ out ($04),a
0483+  93B8 D3 04       
0484+  93BA 3E 08       	ld a,$08 \ out ($03),a
0484+  93BC D3 03       
0485+  93BE 3E 0A       	ld a,$0A \ out ($03),a
0485+  93C0 D3 03       
0486+  93C2 FB          	ei
0487+  93C3             
0488+  93C3 C9          	ret
0489+  93C4             gsNotenoughram:
0490+  93C4 F1          	pop af
0491+  93C5 C9          	ret
0492+  93C6             
0493+  93C6             ;==========================================================
0494+  93C6             ; gsDisable
0495+  93C6             ;==========================================================
0496+  93C6             gsDisable:
0497+  93C6 F3          	di
0498+  93C7 ED 56       	im 1
0499+  93C9 3E 06       	ld a,6 \ out ($04),a
0499+  93CB D3 04       
0500+  93CD FB          	ei
0501+  93CE C9          	ret
0502+  93CF             
0503+  93CF             ;==========================================================
0504+  93CF             ; interrupt
0505+  93CF             ;==========================================================
0506+  93CF             interrupt_start:
0507+  93CF~            #ifdef 3LEVELGRAY
0508+  93CF~            	jp draw3levelGrayscale
0509+  93CF             #else
0510+  93CF C3 4A 94    	jp draw4levelGrayscale
0511+  93D2             #endif
0512+  93D2             interrupt_end:
0513+  93D2             
0514+  93D2             ;==========================================================
0515+  93D2             ; draw3levelGrayScale INTERRUPT
0516+  93D2             ;==========================================================
0517+  93D2             draw3levelGrayscale:
0518+  93D2             
0519+  93D2 F5          	push af \ push bc \ push de \ push hl
0519+  93D3 C5          
0519+  93D4 D5          
0519+  93D5 E5          
0520+  93D6             	
0521+  93D6             grayFastCopy:
0522+  93D6 3E 80       	ld	a,$80
0523+  93D8 D3 10       	out	($10),a
0524+  93DA             
0525+  93DA             
0526+  93DA D9          	exx
0527+  93DB 21 91 9C    	ld	hl,gActivebuf2-12-(-(12*64)+1)
0528+  93DE 3A 49 94    	ld	a,(grayvar)
0529+  93E1 47          	ld	b,a
0530+  93E2 2F          	cpl
0531+  93E3 4F          	ld	c,a
0532+  93E4 D9          	exx
0533+  93E5             
0534+  93E5 21 91 99    	ld	hl,gActivebuf1-12-(-(12*64)+1)
0535+  93E8 3E 20       	ld	a,$20
0536+  93EA 4F          	ld	c,a
0537+  93EB             
0538+  93EB             grayFastCopyAgain:
0539+  93EB             
0540+  93EB             
0541+  93EB 06 10       	ld	b,16
0542+  93ED             
0543+  93ED             	;=== x-loop
0544+  93ED 0C          	inc	c
0545+  93EE 11 01 FD    	ld	de,-(12*64)+1
0546+  93F1 D3 10       	out	($10),a
0547+  93F3 19          	add	hl,de
0548+  93F4 11 0C 00    	ld	de,12
0549+  93F7             
0550+  93F7 D9          	exx	
0551+  93F8 11 01 FD    	ld	de,-(12*64)+1
0552+  93FB 19          	add	hl,de
0553+  93FC 11 0C 00    	ld	de,12
0554+  93FF D9          	exx
0555+  9400             
0556+  9400             grayFastCopyLoop:
0557+  9400             	;===y-loop
0558+  9400 D9          	exx
0559+  9401 19          	add	hl,de
0560+  9402 7E          	ld	a,(hl)
0561+  9403 A0          	and	b
0562+  9404 D9          	exx
0563+  9405 19          	add	hl,de
0564+  9406 B6          	or	(hl)
0565+  9407 D3 11       	out	($11),a
0566+  9409             
0567+  9409 03          	inc bc ; 6 waste
0568+  940A             
0569+  940A D9          	exx
0570+  940B 19          	add	hl,de
0571+  940C 7E          	ld	a,(hl)
0572+  940D A1          	and	c
0573+  940E D9          	exx
0574+  940F 19          	add	hl,de
0575+  9410 B6          	or	(hl)
0576+  9411 D3 11       	out	($11),a
0577+  9413             
0578+  9413 0B          	dec bc ; 6 waste
0579+  9414             
0580+  9414 D9          	exx
0581+  9415 19          	add	hl,de
0582+  9416 7E          	ld	a,(hl)
0583+  9417 A0          	and	b
0584+  9418 D9          	exx
0585+  9419 19          	add	hl,de
0586+  941A B6          	or	(hl)
0587+  941B D3 11       	out	($11),a
0588+  941D             
0589+  941D 3E 03       	ld a,3 ;waste
0590+  941F             
0591+  941F D9          	exx
0592+  9420 19          	add	hl,de
0593+  9421 7E          	ld	a,(hl)
0594+  9422 A1          	and	c
0595+  9423 D9          	exx
0596+  9424 19          	add	hl,de
0597+  9425 B6          	or	(hl)
0598+  9426 D3 11       	out	($11),a
0599+  9428             
0600+  9428 10 D6       	djnz	grayFastCopyLoop
0601+  942A             
0602+  942A             
0603+  942A 79          	ld	a,c
0604+  942B FE 2C       	cp	$2B+1
0605+  942D 20 BC       	jr	nz,grayFastCopyAgain
0606+  942F             
0607+  942F 3A 49 94    	ld a,(grayvar)
0608+  9432 2F          	cpl
0609+  9433 32 49 94    	ld (grayvar),a
0610+  9436             	
0611+  9436 3A 64 93    	ld a,(interfrequency) \ out ($04),a
0611+  9439 D3 04       
0612+  943B 3E 08       	ld a,$08 \ out ($03),a
0612+  943D D3 03       
0613+  943F 3E 0A       	ld a,$0A \ out ($03),a
0613+  9441 D3 03       
0614+  9443             
0615+  9443 E1          	pop hl \ pop de \ pop bc \ pop af
0615+  9444 D1          
0615+  9445 C1          
0615+  9446 F1          
0616+  9447             
0617+  9447 FB          	ei
0618+  9448 C9          	ret
0619+  9449             	;=== now it should return to the main loop, but
0620+  9449             	;=== it returns to interrupt_start!
0621+  9449             	;=== i dont get it :( help!
0622+  9449             
0623+  9449             grayvar:
0624+  9449 AA          	.db %10101010
0625+  944A             	
0626+  944A             
0627+  944A             ;==========================================================
0628+  944A             ; draw4levelGrayScale INTERRUPT
0629+  944A             ;==========================================================
0630+  944A             draw4levelGrayscale:
0631+  944A             
0632+  944A~            #ifdef BETTERCOLOR
0633+  944A~            
0634+  944A~            	push af \ push bc \ push de \ push hl
0634+  944A~            	push af \ push bc \ push de \ push hl
0634+  944A~            	push af \ push bc \ push de \ push hl
0634+  944A~            	push af \ push bc \ push de \ push hl
0635+  944A~            	
0636+  944A~            Gray4afastCopy:
0637+  944A~            	ld	a,$80
0638+  944A~            	out	($10),a
0639+  944A~            
0640+  944A~            	exx
0641+  944A~            	ld	hl,gActivebuf2-12-(-(12*64)+1)
0642+  944A~            	exx
0643+  944A~            
0644+  944A~            	ld	hl,gActivebuf1-12-(-(12*64)+1)
0645+  944A~            	ld	a,$20
0646+  944A~            	ld	c,a
0647+  944A~            
0648+  944A~            Gray4afastCopyAgain:
0649+  944A~            
0650+  944A~            	ld	b,16
0651+  944A~            
0652+  944A~            	;=== x-loop
0653+  944A~            	inc	c
0654+  944A~            	ld	de,-(12*64)+1
0655+  944A~            	out	($10),a
0656+  944A~            	add	hl,de
0657+  944A~            	ld	de,12
0658+  944A~            
0659+  944A~            	exx	
0660+  944A~            	ld	de,-(12*64)+1
0661+  944A~            	add	hl,de
0662+  944A~            	ld	de,12
0663+  944A~            	exx
0664+  944A~            
0665+  944A~            Gray4afastCopyLoop:
0666+  944A~            	;===y-loop
0667+  944A~            	push bc
0668+  944A~            
0669+  944A~            ;-------------------------
0670+  944A~            	exx
0671+  944A~            	add	hl,de
0672+  944A~            	ld	a,(hl)
0673+  944A~            Gray4afc_moda1:
0674+  944A~            	and	%01011010
0675+  944A~            	exx
0676+  944A~            	add	hl,de
0677+  944A~            	ld	b,a
0678+  944A~            	ld	a,(hl)
0679+  944A~            Gray4afc_moda2:
0680+  944A~            	and	%10100101
0681+  944A~            	or	b
0682+  944A~            	out	($11),a
0683+  944A~            ;-------------------------
0684+  944A~            	exx
0685+  944A~            	add	hl,de
0686+  944A~            	ld	a,(hl)
0687+  944A~            Gray4afc_modb1:
0688+  944A~            	and	%01011010
0689+  944A~            	exx
0690+  944A~            	add	hl,de
0691+  944A~            	ld	b,a
0692+  944A~            	ld	a,(hl)
0693+  944A~            Gray4afc_modb2:
0694+  944A~            	and	%10100101
0695+  944A~            	or	b
0696+  944A~            	out	($11),a
0697+  944A~            ;-------------------------
0698+  944A~            	exx
0699+  944A~            	add	hl,de
0700+  944A~            	ld	a,(hl)
0701+  944A~            Gray4afc_modc1:
0702+  944A~            	and	%10101101
0703+  944A~            	exx
0704+  944A~            	add	hl,de
0705+  944A~            	ld	b,a
0706+  944A~            	ld	a,(hl)
0707+  944A~            Gray4afc_modc2:
0708+  944A~            	and	%01010010
0709+  944A~            	or	b
0710+  944A~            	out	($11),a
0711+  944A~            ;-------------------------
0712+  944A~            	exx
0713+  944A~            	add	hl,de
0714+  944A~            	ld	a,(hl)
0715+  944A~            Gray4afc_modd1:
0716+  944A~            	and	%11010110
0717+  944A~            	exx
0718+  944A~            	add	hl,de
0719+  944A~            	ld	b,a
0720+  944A~            	ld	a,(hl)
0721+  944A~            Gray4afc_modd2:
0722+  944A~            	and	%00101001
0723+  944A~            	or	b
0724+  944A~            	out	($11),a
0725+  944A~            ;-------------------------
0726+  944A~            
0727+  944A~            	pop bc
0728+  944A~            	djnz	Gray4afastCopyLoop
0729+  944A~            	;===end y-loop
0730+  944A~            
0731+  944A~            	ld	a,c
0732+  944A~            	cp	$2B+1
0733+  944A~            	jp	nz,Gray4afastCopyAgain
0734+  944A~            	;===end x-loop
0735+  944A~            
0736+  944A~            	ld a,(Gray4agrayint)
0737+  944A~            	inc a
0738+  944A~            	cp 4 \ jr nz,Gray4afc_grayintinc
0738+  944A~            	cp 4 \ jr nz,Gray4afc_grayintinc
0739+  944A~            	xor a
0740+  944A~            Gray4afc_grayintinc:
0741+  944A~            	ld (Gray4agrayint),a
0742+  944A~            
0743+  944A~            
0744+  944A~            	add a,a
0745+  944A~            	ld hl,Gray4afc_masktable
0746+  944A~            	ld b,0 \ ld c,a
0746+  944A~            	ld b,0 \ ld c,a
0747+  944A~            	add hl,bc
0748+  944A~            	;first
0749+  944A~            	ld a,(hl)
0750+  944A~            	ld (Gray4afc_moda1+1),a
0751+  944A~            	inc hl
0752+  944A~            	ld a,(hl)
0753+  944A~            	ld (Gray4afc_moda2+1),a
0754+  944A~            	inc hl
0755+  944A~            	ld a,(hl)
0756+  944A~            	ld (Gray4afc_modb1+1),a
0757+  944A~            	inc hl
0758+  944A~            	ld a,(hl)
0759+  944A~            	ld (Gray4afc_modb2+1),a
0760+  944A~            	inc hl
0761+  944A~            
0762+  944A~            	ld a,(hl)
0763+  944A~            	ld (Gray4afc_modc1+1),a
0764+  944A~            	inc hl
0765+  944A~            	ld a,(hl)
0766+  944A~            	ld (Gray4afc_modc2+1),a
0767+  944A~            	inc hl
0768+  944A~            	ld a,(hl)
0769+  944A~            	ld (Gray4afc_modd1+1),a
0770+  944A~            	inc hl
0771+  944A~            	ld a,(hl)
0772+  944A~            	ld (Gray4afc_modd2+1),a
0773+  944A~            
0774+  944A~            
0775+  944A~            
0776+  944A~            	ld a,(interfrequency) \ out ($04),a
0776+  944A~            	ld a,(interfrequency) \ out ($04),a
0777+  944A~            	ld a,$08 \ out ($03),a
0777+  944A~            	ld a,$08 \ out ($03),a
0778+  944A~            	ld a,$0A \ out ($03),a
0778+  944A~            	ld a,$0A \ out ($03),a
0779+  944A~            
0780+  944A~            	pop hl \ pop de \ pop bc \ pop af
0780+  944A~            	pop hl \ pop de \ pop bc \ pop af
0780+  944A~            	pop hl \ pop de \ pop bc \ pop af
0780+  944A~            	pop hl \ pop de \ pop bc \ pop af
0781+  944A~            
0782+  944A~            	ei
0783+  944A~            	ret
0784+  944A~            
0785+  944A~            Gray4agrayint:
0786+  944A~            	.db 0
0787+  944A~            Gray4afc_masktable:
0788+  944A~            	.db %01000100, %10101010, %00100010, %01010101
0789+  944A~            	.db %00010001, %10101010, %10001000, %01010101
0790+  944A~            
0791+  944A~            	.db %01000100, %10101010, %00100010, %01010101
0792+  944A~            	.db %00010001, %10101010, %10001000, %01010101
0793+  944A~            
0794+  944A~            
0795+  944A             #endif
0796+  944A             
0797+  944A             
0798+  944A             #ifndef VTI
0799+  944A             
0800+  944A F5          	push af \ push bc \ push de \ push hl
0800+  944B C5          
0800+  944C D5          
0800+  944D E5          
0801+  944E             	
0802+  944E             Gray4fastCopy:
0803+  944E 3E 80       	ld	a,$80
0804+  9450 D3 10       	out	($10),a
0805+  9452             
0806+  9452 D9          	exx
0807+  9453 21 91 9C    	ld	hl,gActivebuf2-12-(-(12*64)+1)
0808+  9456 D9          	exx
0809+  9457             
0810+  9457 21 91 99    	ld	hl,gActivebuf1-12-(-(12*64)+1)
0811+  945A 3E 20       	ld	a,$20
0812+  945C 4F          	ld	c,a
0813+  945D             
0814+  945D             Gray4fastCopyAgain:
0815+  945D             
0816+  945D 06 15       	ld	b,21
0817+  945F             
0818+  945F             	;=== x-loop
0819+  945F 0C          	inc	c
0820+  9460 11 01 FD    	ld	de,-(12*64)+1
0821+  9463 D3 10       	out	($10),a
0822+  9465 19          	add	hl,de
0823+  9466 11 0C 00    	ld	de,12
0824+  9469             
0825+  9469 D9          	exx	
0826+  946A 11 01 FD    	ld	de,-(12*64)+1
0827+  946D 19          	add	hl,de
0828+  946E 11 0C 00    	ld	de,12
0829+  9471 D9          	exx
0830+  9472             
0831+  9472             Gray4fastCopyLoop:
0832+  9472             	;===y-loop
0833+  9472 C5          	push bc
0834+  9473             
0835+  9473             ;-------------------------
0836+  9473 D9          	exx
0837+  9474 19          	add	hl,de
0838+  9475 7E          	ld	a,(hl)
0839+  9476             Gray4fc_moda1:
0840+  9476 E6 92       	and	%10010010
0841+  9478 D9          	exx
0842+  9479 19          	add	hl,de
0843+  947A 47          	ld	b,a
0844+  947B 7E          	ld	a,(hl)
0845+  947C             Gray4fc_moda2:
0846+  947C E6 6D       	and	%01101101
0847+  947E B0          	or	b
0848+  947F D3 11       	out	($11),a
0849+  9481             ;-------------------------
0850+  9481 D9          	exx
0851+  9482 19          	add	hl,de
0852+  9483 7E          	ld	a,(hl)
0853+  9484             Gray4fc_modb1:
0854+  9484 E6 49       	and	%01001001
0855+  9486 D9          	exx
0856+  9487 19          	add	hl,de
0857+  9488 47          	ld	b,a
0858+  9489 7E          	ld	a,(hl)
0859+  948A             Gray4fc_modb2:
0860+  948A E6 B6       	and	%10110110
0861+  948C B0          	or	b
0862+  948D D3 11       	out	($11),a
0863+  948F             ;-------------------------
0864+  948F D9          	exx
0865+  9490 19          	add	hl,de
0866+  9491 7E          	ld	a,(hl)
0867+  9492             Gray4fc_modc1:
0868+  9492 E6 24       	and	%00100100
0869+  9494 D9          	exx
0870+  9495 19          	add	hl,de
0871+  9496 47          	ld	b,a
0872+  9497 7E          	ld	a,(hl)
0873+  9498             Gray4fc_modc2:
0874+  9498 E6 DB       	and	%11011011
0875+  949A B0          	or	b
0876+  949B D3 11       	out	($11),a
0877+  949D             ;----------------
0878+  949D             
0879+  949D C1          	pop bc
0880+  949E 10 D2       	djnz	Gray4fastCopyLoop
0881+  94A0             	;===end y-loop
0882+  94A0             
0883+  94A0 C5          	push bc
0884+  94A1 D9          	exx
0885+  94A2 19          	add	hl,de
0886+  94A3 7E          	ld	a,(hl)
0887+  94A4             Gray4fc_modd1:
0888+  94A4 E6 92       	and	%10010010
0889+  94A6 D9          	exx
0890+  94A7 19          	add	hl,de
0891+  94A8 47          	ld	b,a
0892+  94A9 7E          	ld	a,(hl)
0893+  94AA             Gray4fc_modd2:
0894+  94AA E6 6D       	and	%01101101
0895+  94AC B0          	or	b
0896+  94AD D3 11       	out	($11),a
0897+  94AF C1          	pop bc
0898+  94B0             
0899+  94B0 79          	ld	a,c
0900+  94B1 FE 2C       	cp	$2B+1
0901+  94B3 20 A8       	jr	nz,Gray4fastCopyAgain
0902+  94B5             	;===end x-loop
0903+  94B5             
0904+  94B5 3A FB 94    	ld a,(Gray4grayint)
0905+  94B8 3C          	inc a
0906+  94B9 FE 03       	cp 3 \ jr nz,Gray4fc_grayintinc
0906+  94BB 20 01       
0907+  94BD AF          	xor a
0908+  94BE             Gray4fc_grayintinc:
0909+  94BE 32 FB 94    	ld (Gray4grayint),a
0910+  94C1 21 FC 94    	ld hl,Gray4fc_masktable
0911+  94C4 06 00       	ld b,0 \ ld c,a
0911+  94C6 4F          
0912+  94C7 09          	add hl,bc
0913+  94C8             
0914+  94C8             	;first
0915+  94C8 7E          	ld a,(hl)
0916+  94C9 32 77 94    	ld (Gray4fc_moda1+1),a
0917+  94CC 32 A5 94    	ld (Gray4fc_modd1+1),a
0918+  94CF 2F          	cpl
0919+  94D0 32 7D 94    	ld (Gray4fc_moda2+1),a
0920+  94D3 32 AB 94    	ld (Gray4fc_modd2+1),a
0921+  94D6 23          	inc hl
0922+  94D7             
0923+  94D7             	;second
0924+  94D7 7E          	ld a,(hl)
0925+  94D8 32 85 94    	ld (Gray4fc_modb1+1),a
0926+  94DB 2F          	cpl
0927+  94DC 32 8B 94    	ld (Gray4fc_modb2+1),a
0928+  94DF 23          	inc hl
0929+  94E0             
0930+  94E0             	;third
0931+  94E0 7E          	ld a,(hl)
0932+  94E1 32 93 94    	ld (Gray4fc_modc1+1),a
0933+  94E4 2F          	cpl
0934+  94E5 32 99 94    	ld (Gray4fc_modc2+1),a
0935+  94E8             		
0936+  94E8 3A 64 93    	ld a,(interfrequency) \ out ($04),a
0936+  94EB D3 04       
0937+  94ED 3E 08       	ld a,$08 \ out ($03),a
0937+  94EF D3 03       
0938+  94F1 3E 0A       	ld a,$0A \ out ($03),a
0938+  94F3 D3 03       
0939+  94F5             
0940+  94F5 E1          	pop hl \ pop de \ pop bc \ pop af
0940+  94F6 D1          
0940+  94F7 C1          
0940+  94F8 F1          
0941+  94F9             
0942+  94F9 FB          	ei
0943+  94FA C9          	ret
0944+  94FB             
0945+  94FB             Gray4grayint:
0946+  94FB 00          	.db 0
0947+  94FC             Gray4fc_masktable:
0948+  94FC 9249249249  	.db %10010010, %01001001, %00100100, %10010010, %01001001
0949+  9501             
0950+  9501~            #else
0951+  9501~            
0952+  9501~            ;==========================================================
0953+  9501~            ; SPECIAL VTI GRAYSCALE
0954+  9501~            ;==========================================================
0955+  9501~            
0956+  9501~            	push af \ push bc \ push de \ push hl
0956+  9501~            	push af \ push bc \ push de \ push hl
0956+  9501~            	push af \ push bc \ push de \ push hl
0956+  9501~            	push af \ push bc \ push de \ push hl
0957+  9501~            
0958+  9501~            vtifastCopy:
0959+  9501~            	di
0960+  9501~            	ld	a,$80				; 7
0961+  9501~            	out	($10),a				; 11
0962+  9501~            	ld a,(vtigrayint)
0963+  9501~            	or a \ jr z,vtiBuf2
0963+  9501~            	or a \ jr z,vtiBuf2
0964+  9501~            vtiBuf1:
0965+  9501~            	ld	hl,gActivebuf1-12-(-(12*64)+1)	
0966+  9501~            	jr vtia
0967+  9501~            vtiBuf2:
0968+  9501~            	ld	hl,gActivebuf2-12-(-(12*64)+1)	
0969+  9501~            vtia:
0970+  9501~            
0971+  9501~            	ld	a,$20				; 7
0972+  9501~            	ld	c,a				; 4
0973+  9501~            vtifastCopyAgain:
0974+  9501~            	ld	b,64				; 7
0975+  9501~            	inc	c				; 4
0976+  9501~            	ld	de,-(12*64)+1			; 10
0977+  9501~            	out	($10),a				; 11
0978+  9501~            	add	hl,de				; 11
0979+  9501~            	ld	de,12				; 10
0980+  9501~            vtifastCopyLoop:
0981+  9501~            	add	hl,de				; 11
0982+  9501~            	inc hl
0983+  9501~            	dec hl					; 6
0984+  9501~            	ld	a,(hl)				; 7
0985+  9501~            	out	($11),a				; 11
0986+  9501~            						; 6
0987+  9501~            	djnz	vtifastCopyLoop			; 13/8
0988+  9501~            	ld	a,c				; 4
0989+  9501~            	cp	$2B+1				; 7
0990+  9501~            	jr	nz,vtifastCopyAgain		; 10/1
0991+  9501~            
0992+  9501~            	ld a,(vtigrayint)
0993+  9501~            	inc a
0994+  9501~            	cp 3 \ jr nz,vtib
0994+  9501~            	cp 3 \ jr nz,vtib
0995+  9501~            	xor a
0996+  9501~            vtib:	ld (vtigrayint),a
0997+  9501~            
0998+  9501~            	ld a,(interfrequency) \ out ($04),a
0998+  9501~            	ld a,(interfrequency) \ out ($04),a
0999+  9501~            	ld a,$08 \ out ($03),a
0999+  9501~            	ld a,$08 \ out ($03),a
1000+  9501~            	ld a,$0A \ out ($03),a
1000+  9501~            	ld a,$0A \ out ($03),a
1001+  9501~            	pop hl \ pop de \ pop bc \ pop af
1001+  9501~            	pop hl \ pop de \ pop bc \ pop af
1001+  9501~            	pop hl \ pop de \ pop bc \ pop af
1001+  9501~            	pop hl \ pop de \ pop bc \ pop af
1002+  9501~            	ei
1003+  9501~            	ret
1004+  9501~            
1005+  9501~            vtigrayint:
1006+  9501~            	.db 0
1007+  9501             #endif
1008+  9501             
1009+  9501             ;==========================================================
1010+  9501             ; gsGetK
1011+  9501             ;==========================================================
1012+  9501             gsGetK:
1013+  9501 C5          	push bc
1014+  9502 D5          	push de
1015+  9503 E5          	push hl
1016+  9504             gs_GetK2:
1017+  9504 06 07       	ld b,7
1018+  9506             gs_GetK_loop:
1019+  9506             
1020+  9506 3E 07       	ld a,7
1021+  9508 90          	sub b
1022+  9509 21 6D 95    	ld hl,gs_keygroups
1023+  950C 16 00       	ld d,0 \ ld e,a
1023+  950E 5F          
1024+  950F 19          	add hl,de
1025+  9510 7E          	ld a,(hl)
1026+  9511 4F          	ld c,a
1027+  9512             
1028+  9512 3E FF       	ld a,0ffh           ;resets the keypad.
1029+  9514 D3 01       	out (1),a           ;'Required syntax' :)
1030+  9516 79          	ld a,c
1031+  9517 D3 01       	out (1),a
1032+  9519 DB 01       	in a,(1)            ;'Required Syntax'
1033+  951B             
1034+  951B 11 00 00    	ld de,0
1035+  951E FE FE       	cp 254 \ jr z,gs_GetK_254
1035+  9520 28 2B       
1036+  9522 FE FD       	cp 253 \ jr z,gs_GetK_253
1036+  9524 28 26       
1037+  9526 FE FB       	cp 251 \ jr z,gs_GetK_251
1037+  9528 28 21       
1038+  952A FE F7       	cp 247 \ jr z,gs_GetK_247
1038+  952C 28 1C       
1039+  952E FE EF       	cp 239 \ jr z,gs_GetK_239
1039+  9530 28 17       
1040+  9532 FE DF       	cp 223 \ jr z,gs_GetK_223
1040+  9534 28 12       
1041+  9536 FE BF       	cp 191 \ jr z,gs_GetK_191
1041+  9538 28 0D       
1042+  953A FE 7F       	cp 127 \ jr z,gs_GetK_127
1042+  953C 28 08       
1043+  953E             
1044+  953E             gs_GetK_loopend:
1045+  953E             
1046+  953E 10 C6       	djnz gs_GetK_loop
1047+  9540             
1048+  9540 AF          	xor a
1049+  9541 32 AC 95    	ld (gs_keymem),a
1050+  9544 18 23       	jr gs_GetK_end
1051+  9546             
1052+  9546             gs_GetK_127:
1053+  9546 1C          	inc e
1054+  9547             gs_GetK_191:
1055+  9547 1C          	inc e
1056+  9548             gs_GetK_223:
1057+  9548 1C          	inc e
1058+  9549             gs_GetK_239:
1059+  9549 1C          	inc e
1060+  954A             gs_GetK_247:
1061+  954A 1C          	inc e
1062+  954B             gs_GetK_251:
1063+  954B 1C          	inc e
1064+  954C             gs_GetK_253:
1065+  954C 1C          	inc e
1066+  954D             gs_GetK_254:
1067+  954D             
1068+  954D D5          	push de
1069+  954E 3E 07       	ld a,7
1070+  9550 90          	sub b
1071+  9551 87          	add a,a \ add a,a \ add a,a
1071+  9552 87          
1071+  9553 87          
1072+  9554 16 00       	ld d,0 \ ld e,a
1072+  9556 5F          
1073+  9557 21 74 95    	ld hl,gs_keygroup1
1074+  955A 19          	add hl,de
1075+  955B D1          	pop de
1076+  955C 19          	add hl,de
1077+  955D 7E          	ld a,(hl)
1078+  955E             
1079+  955E             	;push hl
1080+  955E             	;push de
1081+  955E             	;push af
1082+  955E             	;bcall(_puts)
1083+  955E             	;ld	hl,2567
1084+  955E             	;ld	(currow),hl
1085+  955E             	;ld	h,0
1086+  955E             	;ld	l,a
1087+  955E             	;bcall(_disphl)
1088+  955E             	;pop af
1089+  955E             	;pop de
1090+  955E             	;pop hl
1091+  955E             
1092+  955E 57          	ld d,a
1093+  955F 3A AC 95    	ld a,(gs_keymem)
1094+  9562 BA          	cp d \ jr z,gs_getK_end
1094+  9563 28 04       
1095+  9565 7A          	ld a,d
1096+  9566 32 AC 95    	ld (gs_keymem),a
1097+  9569             
1098+  9569             
1099+  9569             gs_GetK_end:
1100+  9569             
1101+  9569             ;	ld b,255
1102+  9569             ;gs_GetK_endloopc:
1103+  9569             ;	push bc
1104+  9569             ;	ld b,255
1105+  9569             ;gs_Getk_endloopa:
1106+  9569             ;	push bc
1107+  9569             ;	ld b,255
1108+  9569             ;gs_GetK_endloopb:
1109+  9569             ;	push hl
1110+  9569             ;	pop hl
1111+  9569             ;	djnz gs_GetK_endloopb
1112+  9569             ;	pop bc
1113+  9569             ;	djnz gs_GetK_endloopa
1114+  9569             ;	pop bc
1115+  9569             ;	djnz gs_GetK_endloopc
1116+  9569             
1117+  9569 E1          	pop hl
1118+  956A D1          	pop de
1119+  956B C1          	pop bc
1120+  956C C9          	ret
1121+  956D             
1122+  956D             gs_keygroups:
1123+  956D FEFDFBF7EFDF	.db $fe, $fd, $fb, $f7, $ef, $df, $bf
1123+  9573 BF
1124+  9574             gs_keygroup1:
1125+  9574 010203040000	.db 01h, 02h, 03h, 04h, 00h, 00h, 00h, 00h
1125+  957A 0000
1126+  957C             gs_keygroup2:
1127+  957C 090A0B0C0D00	.db 09h, 0Ah, 0Bh, 0Ch, 0Dh, 00h, 0Fh, 00h
1127+  9582 0F00
1128+  9584             gs_keygroup3:
1129+  9584 8C1213141516	.db 8Ch, 12h, 13h, 14h, 15h, 16h, 17h, 00h
1129+  958A 1700
1130+  958C             gs_keygroup4:
1131+  958C 8D1A1B1C1D1E	.db 8Dh, 1Ah, 1Bh, 1Ch, 1Dh, 1Eh, 1Fh, 20h
1131+  9592 1F20
1132+  9594             gs_keygroup5:
1133+  9594 212223242526	.db 21h, 22h, 23h, 24h, 25h, 26h, 27h, 28h
1133+  959A 2728
1134+  959C             gs_keygroup6:
1135+  959C 002A2B2C2D2E	.db 00h, 2Ah, 2Bh, 2Ch, 2Dh, 2Eh, 2Fh, 30h
1135+  95A2 2F30
1136+  95A4             gs_keygroup7:
1137+  95A4 313233343536	.db 31h, 32h, 33h, 34h, 35h, 36h, 37h, 38h 
1137+  95AA 3738
1138+  95AC             gs_keymem:
1139+  95AC 00          	.db 0
1140+  95AD             
1141+  95AD             ;==========================================================
1142+  95AD             ; gsSetFreq
1143+  95AD             ;==========================================================
1144+  95AD             ; call this routine to set up the interrupt frequency.
1145+  95AD             gsSetFreq:
1146+  95AD             
1147+  95AD             gsSetFreq_loop:
1148+  95AD             	;=== create upper line, 10 bytes
1149+  95AD 21 5D 90    	ld hl,gBuf1+(47*12)
1150+  95B0 11 99 84    	ld de,gBuf2+(47*12)
1151+  95B3 3E FF       	ld a,%11111111
1152+  95B5 06 0C       	ld b,12
1153+  95B7             gsSetFreq_a:
1154+  95B7 77          	ld (hl),a
1155+  95B8 23          	inc hl
1156+  95B9 12          	ld (de),a
1157+  95BA 13          	inc de
1158+  95BB 10 FA       	djnz gsSetFreq_a
1159+  95BD             
1160+  95BD             	;=== clear the used area
1161+  95BD 21 69 90    	ld hl,gBuf1+(48*12)
1162+  95C0 11 6A 90    	ld de,gBuf1+(48*12)+1
1163+  95C3 36 00       	ld (hl),0
1164+  95C5 01 CB 00    	ld bc,(12*17)-1
1165+  95C8 ED B0       	ldir
1166+  95CA             	;=== clear the used area
1167+  95CA 21 A5 84    	ld hl,gBuf2+(48*12)
1168+  95CD 11 A6 84    	ld de,gBuf2+(48*12)+1
1169+  95D0 36 00       	ld (hl),0
1170+  95D2 01 CB 00    	ld bc,(12*17)-1
1171+  95D5 ED B0       	ldir
1172+  95D7             
1173+  95D7             	
1174+  95D7             	;=== set buffer text
1175+  95D7 FD CB 14 FE 	set textwrite,(iy+sgrflags)
1176+  95DB             
1177+  95DB             	;=== draw the texts
1178+  95DB 21 0A 31    	ld	hl,49*256 + 10
1179+  95DE 22 52 82    	ld	(pencol),hl
1180+  95E1 21 71 96    	ld	hl,gsSetFreq_text
1181+  95E4 CD 81 47    	bcall(_vputs)
1182+  95E7 21 12 39    	ld	hl,57*256 + 18
1183+  95EA 22 52 82    	ld	(pencol),hl
1184+  95ED 21 8A 96    	ld	hl,gsSetFreq_zerot
1185+  95F0 CD 81 47    	bcall(_vputs)
1186+  95F3 21 22 39    	ld	hl,57*256 + 34
1187+  95F6 22 52 82    	ld	(pencol),hl
1188+  95F9 21 8C 96    	ld	hl,gsSetFreq_twot
1189+  95FC CD 81 47    	bcall(_vputs)
1190+  95FF 21 32 39    	ld	hl,57*256 + 50
1191+  9602 22 52 82    	ld	(pencol),hl
1192+  9605 21 8E 96    	ld	hl,gsSetFreq_fourt
1193+  9608 CD 81 47    	bcall(_vputs)
1194+  960B 21 42 39    	ld	hl,57*256 + 66
1195+  960E 22 52 82    	ld	(pencol),hl
1196+  9611 21 90 96    	ld	hl,gsSetFreq_sixt
1197+  9614 CD 81 47    	bcall(_vputs)
1198+  9617 CD 97 93    	call gsEnable
1199+  961A             
1200+  961A             	;=== draw the cursor
1201+  961A 21 D5 90    	ld hl,gBuf1+(57*12)
1202+  961D 06 00       	ld b,0
1203+  961F 3A 64 93    	ld a,(interfrequency)
1204+  9622 C6 02       	add a,2
1205+  9624 4F          	ld c,a
1206+  9625 09          	add hl,bc
1207+  9626 06 07       	ld b,7
1208+  9628 3E FF       	ld a,255
1209+  962A 11 0C 00    	ld de,12
1210+  962D             gsSetFreq_cursorloop:
1211+  962D 7E          	ld a,(hl)
1212+  962E 2F          	cpl
1213+  962F 77          	ld (hl),a
1214+  9630 19          	add hl,de
1215+  9631 10 FA       	djnz gsSetFreq_cursorloop
1216+  9633 CD 80 93    	call gsCopyBuffer
1217+  9636             
1218+  9636             
1219+  9636             	;=== wait for key input
1220+  9636             gsSetFreq_waitkey:
1221+  9636 CD 01 95    	call gsGetk
1222+  9639 B7          	or a \ jr z,gsSetFreq_waitkey
1222+  963A 28 FA       
1223+  963C FE 09       	cp gEnter \ ret z
1223+  963E C8          
1224+  963F FE 21       	cp g0 \ jr z,gsSetFreq_zero
1224+  9641 28 0F       
1225+  9643 FE 1A       	cp g2 \ jr z,gsSetFreq_two
1225+  9645 28 12       
1226+  9647 FE 23       	cp g4 \ jr z,gsSetFreq_four
1226+  9649 28 16       
1227+  964B FE 13       	cp g6 \ jr z,gsSetFreq_six
1227+  964D 28 1A       
1228+  964F C3 AD 95    	jp gsSetFreq_loop
1229+  9652             
1230+  9652             gsSetFreq_zero:
1231+  9652 AF          	xor a
1232+  9653 32 64 93    	ld (interfrequency),a
1233+  9656 C3 AD 95    	jp gsSetFreq_loop
1234+  9659             gsSetFreq_two:
1235+  9659 3E 02       	ld a,2
1236+  965B 32 64 93    	ld (interfrequency),a
1237+  965E C3 AD 95    	jp gsSetFreq_loop
1238+  9661             gsSetFreq_four:
1239+  9661 3E 04       	ld a,4
1240+  9663 32 64 93    	ld (interfrequency),a
1241+  9666 C3 AD 95    	jp gsSetFreq_loop
1242+  9669             gsSetFreq_six:
1243+  9669 3E 06       	ld a,6
1244+  966B 32 64 93    	ld (interfrequency),a
1245+  966E C3 AD 95    	jp gsSetFreq_loop
1246+  9671             	
1247+  9671 73657420696EgsSetFreq_text:	.db "set interrupt frequency:",0
1247+  9677 74657272757074206672657175656E63793A00
1248+  968A 30 00       gsSetFreq_zerot:	.db "0",0
1249+  968C 32 00       gsSetFreq_twot:		.db "2",0
1250+  968E 34 00       gsSetFreq_fourt:	.db "4",0
1251+  9690 36 00       gsSetFreq_sixt:		.db "6",0
1252+  9692             
1253+  9692             ;==========================================================
1254+  9692             ; gsbuf1Tobuf2
1255+  9692             ;==========================================================
1256+  9692             ; copies buffer 1 to buffer 2
1257+  9692             gsbuf1Tobuf2:
1258+  9692 21 29 8E    	ld hl,gbuf1
1259+  9695 11 65 82    	ld de,gbuf2
1260+  9698 01 00 03    	ld bc,768
1261+  969B ED B0       	ldir
1262+  969D C9          	ret
1263+  969E             
1264+  969E             #ifndef NODOUBLEBUFFER
1265+  969E             gActivebuf1:
1266+  969E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1266+  96A4 000000000000000000000000000000000000
1267+  96B6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1267+  96BC 000000000000000000000000000000000000
1268+  96CE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1268+  96D4 000000000000000000000000000000000000
1269+  96E6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1269+  96EC 000000000000000000000000000000000000
1270+  96FE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1270+  9704 000000000000000000000000000000000000
1271+  9716 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1271+  971C 000000000000000000000000000000000000
1272+  972E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1272+  9734 000000000000000000000000000000000000
1273+  9746 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1273+  974C 000000000000000000000000000000000000
1274+  975E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1274+  9764 000000000000000000000000000000000000
1275+  9776 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1275+  977C 000000000000000000000000000000000000
1276+  978E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1276+  9794 000000000000000000000000000000000000
1277+  97A6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1277+  97AC 000000000000000000000000000000000000
1278+  97BE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1278+  97C4 000000000000000000000000000000000000
1279+  97D6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1279+  97DC 000000000000000000000000000000000000
1280+  97EE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1280+  97F4 000000000000000000000000000000000000
1281+  9806 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1281+  980C 000000000000000000000000000000000000
1282+  981E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1282+  9824 000000000000000000000000000000000000
1283+  9836 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1283+  983C 000000000000000000000000000000000000
1284+  984E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1284+  9854 000000000000000000000000000000000000
1285+  9866 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1285+  986C 000000000000000000000000000000000000
1286+  987E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1286+  9884 000000000000000000000000000000000000
1287+  9896 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1287+  989C 000000000000000000000000000000000000
1288+  98AE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1288+  98B4 000000000000000000000000000000000000
1289+  98C6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1289+  98CC 000000000000000000000000000000000000
1290+  98DE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1290+  98E4 000000000000000000000000000000000000
1291+  98F6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1291+  98FC 000000000000000000000000000000000000
1292+  990E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1292+  9914 000000000000000000000000000000000000
1293+  9926 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1293+  992C 000000000000000000000000000000000000
1294+  993E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1294+  9944 000000000000000000000000000000000000
1295+  9956 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1295+  995C 000000000000000000000000000000000000
1296+  996E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1296+  9974 000000000000000000000000000000000000
1297+  9986 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1297+  998C 000000000000000000000000000000000000
1298+  999E             gActivebuf2:
1299+  999E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1299+  99A4 000000000000000000000000000000000000
1300+  99B6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1300+  99BC 000000000000000000000000000000000000
1301+  99CE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1301+  99D4 000000000000000000000000000000000000
1302+  99E6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1302+  99EC 000000000000000000000000000000000000
1303+  99FE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1303+  9A04 000000000000000000000000000000000000
1304+  9A16 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1304+  9A1C 000000000000000000000000000000000000
1305+  9A2E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1305+  9A34 000000000000000000000000000000000000
1306+  9A46 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1306+  9A4C 000000000000000000000000000000000000
1307+  9A5E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1307+  9A64 000000000000000000000000000000000000
1308+  9A76 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1308+  9A7C 000000000000000000000000000000000000
1309+  9A8E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1309+  9A94 000000000000000000000000000000000000
1310+  9AA6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1310+  9AAC 000000000000000000000000000000000000
1311+  9ABE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1311+  9AC4 000000000000000000000000000000000000
1312+  9AD6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1312+  9ADC 000000000000000000000000000000000000
1313+  9AEE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1313+  9AF4 000000000000000000000000000000000000
1314+  9B06 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1314+  9B0C 000000000000000000000000000000000000
1315+  9B1E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1315+  9B24 000000000000000000000000000000000000
1316+  9B36 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1316+  9B3C 000000000000000000000000000000000000
1317+  9B4E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1317+  9B54 000000000000000000000000000000000000
1318+  9B66 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1318+  9B6C 000000000000000000000000000000000000
1319+  9B7E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1319+  9B84 000000000000000000000000000000000000
1320+  9B96 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1320+  9B9C 000000000000000000000000000000000000
1321+  9BAE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1321+  9BB4 000000000000000000000000000000000000
1322+  9BC6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1322+  9BCC 000000000000000000000000000000000000
1323+  9BDE 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1323+  9BE4 000000000000000000000000000000000000
1324+  9BF6 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1324+  9BFC 000000000000000000000000000000000000
1325+  9C0E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1325+  9C14 000000000000000000000000000000000000
1326+  9C26 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1326+  9C2C 000000000000000000000000000000000000
1327+  9C3E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1327+  9C44 000000000000000000000000000000000000
1328+  9C56 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1328+  9C5C 000000000000000000000000000000000000
1329+  9C6E 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1329+  9C74 000000000000000000000000000000000000
1330+  9C86 000000000000	.db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1330+  9C8C 000000000000000000000000000000000000
1331+  9C9E             #endif
1332+  9C9E             
0067   9C9E             
0068   9C9E             ;==========================================================
0069   9C9E             ; picture data (made with the great istudio from acz)
0070   9C9E             ;==========================================================
0071   9C9E             picture_Layer2:
0072   9C9E EC77C9EE0000 .db $ec,$77,$c9,$ee,$00,$00,$00,$00,$0c,$60,$05,$ff
0072   9CA4 00000C6005FF
0073   9CAA 787C78000000 .db $78,$7c,$78,$00,$00,$00,$00,$00,$17,$50,$05,$ff
0073   9CB0 0000175005FF
0074   9CB6 FC15E1803C00 .db $fc,$15,$e1,$80,$3c,$00,$00,$00,$14,$16,$05,$ff
0074   9CBC 0000141605FF
0075   9CC2 7E4238300360 .db $7e,$42,$38,$30,$03,$60,$00,$00,$17,$b2,$07,$ff
0075   9CC8 000017B207FF
0076   9CCE FC4127E3000F .db $fc,$41,$27,$e3,$00,$0f,$80,$00,$04,$22,$07,$ff
0076   9CD4 8000042207FF
0077   9CDA FD08052E3800 .db $fd,$08,$05,$2e,$38,$00,$5c,$00,$ef,$68,$07,$ff
0077   9CE0 5C00EF6807FF
0078   9CE6 F910209FC030 .db $f9,$10,$20,$9f,$c0,$30,$02,$bf,$03,$f8,$07,$ff
0078   9CEC 02BF03F807FF
0079   9CF2 D90860097C01 .db $d9,$08,$60,$09,$7c,$01,$c0,$02,$c8,$00,$07,$ff
0079   9CF8 C002C80007FF
0080   9CFE F8040000CFE1 .db $f8,$04,$00,$00,$cf,$e1,$83,$00,$00,$02,$0f,$ff
0080   9D04 830000020FFF
0081   9D0A 78840000031F .db $78,$84,$00,$00,$03,$1f,$fc,$1c,$06,$bc,$0f,$ff
0081   9D10 FC1C06BC0FFF
0082   9D16 FE8084000008 .db $fe,$80,$84,$00,$00,$08,$7c,$10,$01,$41,$0f,$ff
0082   9D1C 7C1001410FFF
0083   9D22 FE8454000002 .db $fe,$84,$54,$00,$00,$02,$23,$00,$0e,$fe,$0f,$ff
0083   9D28 23000EFE0FFF
0084   9D2E FC8100000002 .db $fc,$81,$00,$00,$00,$02,$40,$07,$0c,$01,$0f,$ff
0084   9D34 40070C010FFF
0085   9D3A FC8309000000 .db $fc,$83,$09,$00,$00,$00,$c0,$00,$03,$5f,$1f,$ff
0085   9D40 C000035F1FFF
0086   9D46 FF4008000005 .db $ff,$40,$08,$00,$00,$05,$80,$00,$00,$00,$1f,$ff
0086   9D4C 800000001FFF
0087   9D52 FF4002000003 .db $ff,$40,$02,$00,$00,$03,$00,$00,$01,$00,$3f,$ff
0087   9D58 000001003FFF
0088   9D5E DE4001400006 .db $de,$40,$01,$40,$00,$06,$00,$00,$04,$01,$3f,$ff
0088   9D64 000004013FFF
0089   9D6A 1E0002400008 .db $1e,$00,$02,$40,$00,$08,$00,$00,$04,$00,$ff,$ff
0089   9D70 00000400FFFF
0090   9D76 7FA084000030 .db $7f,$a0,$84,$00,$00,$30,$00,$00,$30,$1e,$7f,$ff
0090   9D7C 0000301E7FFF
0091   9D82 DF2004100030 .db $df,$20,$04,$10,$00,$30,$00,$00,$21,$e0,$ff,$ff
0091   9D88 000021E0FFFF
0092   9D8E DF2080C00040 .db $df,$20,$80,$c0,$00,$40,$00,$01,$0c,$e8,$ff,$df
0092   9D94 00010CE8FFDF
0093   9D9A 5E4086E00040 .db $5e,$40,$86,$e0,$00,$40,$00,$01,$67,$01,$ff,$bf
0093   9DA0 00016701FFBF
0094   9DA6 7E9044FC0000 .db $7e,$90,$44,$fc,$00,$00,$00,$0a,$03,$f3,$ff,$bf
0094   9DAC 000A03F3FFBF
0095   9DB2 DB50407C0000 .db $db,$50,$40,$7c,$00,$00,$00,$0c,$48,$03,$fd,$df
0095   9DB8 000C4803FDDF
0096   9DBE B8D000E60000 .db $b8,$d0,$00,$e6,$00,$00,$00,$37,$01,$17,$fd,$dc
0096   9DC4 00370117FDDC
0097   9DCA FE403E470000 .db $fe,$40,$3e,$47,$00,$00,$03,$b8,$90,$1f,$fd,$bf
0097   9DD0 03B8901FFDBF
0098   9DD6 FFB000530080 .db $ff,$b0,$00,$53,$00,$80,$15,$8e,$20,$1f,$c7,$b3
0098   9DDC 158E201FC7B3
0099   9DE2 FFF8000CC040 .db $ff,$f8,$00,$0c,$c0,$40,$06,$7d,$00,$3f,$80,$8f
0099   9DE8 067D003F808F
0100   9DEE FE302034E840 .db $fe,$30,$20,$34,$e8,$40,$26,$3d,$80,$7f,$40,$7f
0100   9DF4 263D807F407F
0101   9DFA FFF8DD0C0C30 .db $ff,$f8,$dd,$0c,$0c,$30,$7c,$7b,$90,$7c,$40,$1f
0101   9E00 7C7B907C401F
0102   9E06 F40807100259 .db $f4,$08,$07,$10,$02,$59,$1f,$ff,$40,$f8,$00,$0f
0102   9E0C 1FFF40F8000F
0103   9E12 EFFF41F00000 .db $ef,$ff,$41,$f0,$00,$00,$0b,$33,$28,$e1,$ff,$ed
0103   9E18 0B3328E1FFED
0104   9E1E 5FFFC01E0000 .db $5f,$ff,$c0,$1e,$00,$00,$00,$f4,$b9,$cf,$31,$ff
0104   9E24 00F4B9CF31FF
0105   9E2A B00040240000 .db $b0,$00,$40,$24,$00,$00,$00,$f8,$01,$f0,$00,$33
0105   9E30 00F801F00033
0106   9E36 F00040100600 .db $f0,$00,$40,$10,$06,$00,$06,$00,$07,$e0,$00,$36
0106   9E3C 060007E00036
0107   9E42 F00040080260 .db $f0,$00,$40,$08,$02,$60,$00,$20,$03,$00,$00,$3f
0107   9E48 00200300003F
0108   9E4E B00060082040 .db $b0,$00,$60,$08,$20,$40,$f0,$4f,$03,$00,$00,$3f
0108   9E54 F04F0300003F
0109   9E5A E000606FE82F .db $e0,$00,$60,$6f,$e8,$2f,$ff,$fa,$e6,$00,$00,$3f
0109   9E60 FFFAE600003F
0110   9E66 E00043FC3C7F .db $e0,$00,$43,$fc,$3c,$7f,$fd,$ff,$ec,$00,$00,$3f
0110   9E6C FDFFEC00003F
0111   9E72 E000C6800340 .db $e0,$00,$c6,$80,$03,$40,$05,$00,$38,$00,$29,$3d
0111   9E78 05003800293D
0112   9E7E 4000C6000120 .db $40,$00,$c6,$00,$01,$20,$07,$00,$30,$00,$7f,$ff
0112   9E84 070030007FFF
0113   9E8A E000C60001B0 .db $e0,$00,$c6,$00,$01,$b0,$07,$00,$d0,$01,$c3,$fe
0113   9E90 0700D001C3FE
0114   9E96 40004C0000D0 .db $40,$00,$4c,$00,$00,$d0,$02,$00,$90,$03,$03,$fc
0114   9E9C 0200900303FC
0115   9EA2 4080440C0088 .db $40,$80,$44,$0c,$00,$88,$00,$01,$b0,$07,$07,$dc
0115   9EA8 0001B00707DC
0116   9EAE 40004C7E00CC .db $40,$00,$4c,$7e,$00,$cc,$00,$01,$a0,$02,$07,$98
0116   9EB4 0001A0020798
0117   9EBA 008047E800CC .db $00,$80,$47,$e8,$00,$cc,$00,$02,$20,$06,$0f,$78
0117   9EC0 000220060F78
0118   9EC6 0080468000D2 .db $00,$80,$46,$80,$00,$d2,$00,$06,$20,$06,$0e,$18
0118   9ECC 000620060E18
0119   9ED2 01805C0000B3 .db $01,$80,$5c,$00,$00,$b3,$00,$0c,$30,$02,$1f,$f0
0119   9ED8 000C30021FF0
0120   9EDE 0100580000C7 .db $01,$00,$58,$00,$00,$c7,$00,$0e,$30,$03,$0f,$f0
0120   9EE4 000E30030FF0
0121   9EEA 0100700001C6 .db $01,$00,$70,$00,$01,$c6,$00,$06,$30,$01,$ff,$f0
0121   9EF0 00063001FFF0
0122   9EF6 0180F000018C .db $01,$80,$f0,$00,$01,$8c,$00,$02,$18,$00,$fc,$38
0122   9EFC 00021800FC38
0123   9F02 0380E00E0198 .db $03,$80,$e0,$0e,$01,$98,$00,$01,$18,$00,$00,$70
0123   9F08 000118000070
0124   9F0E 0380E00E00B0 .db $03,$80,$e0,$0e,$00,$b0,$00,$01,$9c,$00,$00,$38
0124   9F14 00019C000038
0125   9F1A 0780E00200F0 .db $07,$80,$e0,$02,$00,$f0,$04,$01,$c4,$00,$00,$7c
0125   9F20 0401C400007C
0126   9F26 0700E00200E0 .db $07,$00,$e0,$02,$00,$e0,$0c,$00,$c7,$00,$00,$7c
0126   9F2C 0C00C700007C
0127   9F32 0700D00600C0 .db $07,$00,$d0,$06,$00,$c0,$0e,$00,$43,$80,$00,$7e
0127   9F38 0E004380007E
0128   9F3E 0500F80400C0 .db $05,$00,$f8,$04,$00,$c0,$0f,$00,$60,$c0,$00,$7f
0128   9F44 0F0060C0007F
0129   9F4A 7FFECF87FFFF .db $7f,$fe,$cf,$87,$ff,$ff,$f3,$ff,$e0,$7d,$f1,$ff
0129   9F50 F3FFE07DF1FF
0130   9F56 F8FFE7F9CE77 .db $f8,$ff,$e7,$f9,$ce,$77,$20,$ff,$ec,$7f,$ff,$fe
0130   9F5C 20FFEC7FFFFE
0131   9F62 9B528FFC0000 .db $9b,$52,$8f,$fc,$00,$00,$00,$00,$11,$e0,$e2,$7c
0131   9F68 000011E0E27C
0132   9F6E FFFB7FA60000 .db $ff,$fb,$7f,$a6,$00,$00,$00,$00,$23,$0c,$7f,$fc
0132   9F74 0000230C7FFC
0133   9F7A FFE7EBF70080 .db $ff,$e7,$eb,$f7,$00,$80,$00,$00,$4e,$ff,$ff,$f8
0133   9F80 00004EFFFFF8
0134   9F86 FFFFFFFBC07F .db $ff,$ff,$ff,$fb,$c0,$7f,$00,$00,$1f,$7f,$1f,$f8
0134   9F8C 00001F7F1FF8
0135   9F92 FFEDFFF8E000 .db $ff,$ed,$ff,$f8,$e0,$00,$40,$02,$33,$ff,$f3,$f0
0135   9F98 400233FFF3F0
0136   9F9E             
0137   9F9E             picture_Layer1:
0138   9F9E 10F830010000 .db $10,$f8,$30,$01,$00,$00,$00,$00,$13,$9b,$ff,$ff
0138   9FA4 0000139BFFFF
0139   9FAA 843F80000000 .db $84,$3f,$80,$00,$00,$00,$00,$00,$08,$ab,$ff,$ff
0139   9FB0 000008ABFFFF
0140   9FB6 1E4BFE000000 .db $1e,$4b,$fe,$00,$00,$00,$00,$00,$0b,$e9,$ff,$ff
0140   9FBC 00000BE9FFFF
0141   9FC2 FC5DFFC00080 .db $fc,$5d,$ff,$c0,$00,$80,$00,$00,$08,$4d,$ff,$ff
0141   9FC8 0000084DFFFF
0142   9FCE FC1EDFFC0000 .db $fc,$1e,$df,$fc,$00,$00,$00,$00,$1b,$dd,$ff,$ff
0142   9FD4 00001BDDFFFF
0143   9FDA F837C3FFC000 .db $f8,$37,$c3,$ff,$c0,$00,$20,$00,$10,$97,$ff,$ff
0143   9FE0 20001097FFFF
0144   9FE6 F43FC07FFFC0 .db $f4,$3f,$c0,$7f,$ff,$c0,$00,$7f,$fc,$07,$ff,$ff
0144   9FEC 007FFC07FFFF
0145   9FF2 E40FA007FFFE .db $e4,$0f,$a0,$07,$ff,$fe,$00,$00,$3f,$ff,$ff,$ff
0145   9FF8 00003FFFFFFF
0146   9FFE C40FF0003FFE .db $c4,$0f,$f0,$00,$3f,$fe,$7c,$00,$00,$7f,$ff,$ff
0146   A004 7C00007FFFFF
0147   A00A 8407F80000FF .db $84,$07,$f8,$00,$00,$ff,$c3,$e0,$01,$43,$ff,$ff
0147   A010 C3E00143FFFF
0148   A016 0007F8000007 .db $00,$07,$f8,$00,$00,$07,$ff,$ef,$fe,$bf,$ff,$ff
0148   A01C FFEFFEBFFFFF
0149   A022 0003AC000001 .db $00,$03,$ac,$00,$00,$01,$f0,$ff,$f1,$01,$ff,$ff
0149   A028 F0FFF101FFFF
0150   A02E 0203BE000003 .db $02,$03,$be,$00,$00,$03,$e0,$00,$ff,$ff,$ff,$ff
0150   A034 E000FFFFFFFF
0151   A03A 020196000007 .db $02,$01,$96,$00,$00,$07,$80,$00,$07,$ff,$ff,$ff
0151   A040 800007FFFFFF
0152   A046 00018F00000F .db $00,$01,$8f,$00,$00,$0f,$00,$00,$01,$ff,$ff,$ff
0152   A04C 000001FFFFFF
0153   A052 00018580000E .db $00,$01,$85,$80,$00,$0e,$00,$00,$00,$ff,$ff,$ff
0153   A058 000000FFFFFF
0154   A05E 21008280001C .db $21,$00,$82,$80,$00,$1c,$00,$00,$03,$ff,$ff,$ff
0154   A064 000003FFFFFF
0155   A06A 610083C0001C .db $61,$00,$83,$c0,$00,$1c,$00,$00,$0f,$ff,$7f,$ff
0155   A070 00000FFF7FFF
0156   A076 E00002E00018 .db $e0,$00,$02,$e0,$00,$18,$00,$00,$1f,$ff,$ff,$ff
0156   A07C 00001FFFFFFF
0157   A082 E08082E00030 .db $e0,$80,$82,$e0,$00,$30,$00,$00,$7f,$ff,$ff,$ff
0157   A088 00007FFFFFFF
0158   A08E E08006F00020 .db $e0,$80,$06,$f0,$00,$20,$00,$00,$ff,$17,$ff,$ff
0158   A094 0000FF17FFFF
0159   A09A E08003F80000 .db $e0,$80,$03,$f8,$00,$00,$00,$03,$f8,$ff,$ff,$ff
0159   A0A0 0003F8FFFFFF
0160   A0A6 C1C002F80000 .db $c1,$c0,$02,$f8,$00,$00,$00,$07,$fc,$0f,$ff,$fe
0160   A0AC 0007FC0FFFFE
0161   A0B2 C7C002FC0000 .db $c7,$c0,$02,$fc,$00,$00,$00,$1f,$b7,$ff,$ff,$fc
0161   A0B8 001FB7FFFFFC
0162   A0BE C7E0427E0000 .db $c7,$e0,$42,$7e,$00,$00,$00,$78,$fe,$0f,$fb,$ff
0162   A0C4 0078FE0FFBFF
0163   A0CA 0030032E0000 .db $00,$30,$03,$2e,$00,$00,$01,$c7,$f0,$0f,$ff,$ff
0163   A0D0 01C7F00FFFFF
0164   A0D6 0010018F0000 .db $00,$10,$01,$8f,$00,$00,$0e,$7f,$d0,$1f,$ff,$ff
0164   A0DC 0E7FD01FFFFF
0165   A0E2 0010006780C0 .db $00,$10,$00,$67,$80,$c0,$79,$be,$f0,$3f,$ff,$ff
0165   A0E8 79BEF03FFFFF
0166   A0EE 01F8001FF061 .db $01,$f8,$00,$1f,$f0,$61,$df,$3e,$70,$3f,$bf,$ff
0166   A0F4 DF3E703FBFFF
0167   A0FA 07F83E1FFE67 .db $07,$f8,$3e,$1f,$fe,$67,$ff,$fc,$60,$7e,$3f,$ff
0167   A100 FFFC607E3FFF
0168   A106 0FF807CFFFFF .db $0f,$f8,$07,$cf,$ff,$ff,$fc,$78,$20,$78,$7f,$ff
0168   A10C FC7820787FFF
0169   A112 1FF881FFFFFF .db $1f,$f8,$81,$ff,$ff,$ff,$fc,$00,$e0,$f3,$ff,$ff
0169   A118 FC00E0F3FFFF
0170   A11E BFFFC0FFFFFF .db $bf,$ff,$c0,$ff,$ff,$ff,$fc,$0f,$41,$ff,$cf,$ff
0170   A124 FC0F41FFCFFF
0171   A12A F800607FFFFF .db $f8,$00,$60,$7f,$ff,$ff,$ff,$fc,$03,$f8,$00,$3f
0171   A130 FFFC03F8003F
0172   A136 F000603FFFFF .db $f0,$00,$60,$3f,$ff,$ff,$ff,$f0,$03,$c0,$00,$3f
0172   A13C FFF003C0003F
0173   A142 F000601FF1FF .db $f0,$00,$60,$1f,$f1,$ff,$ff,$c0,$07,$80,$00,$3f
0173   A148 FFC00780003F
0174   A14E F0004007E03F .db $f0,$00,$40,$07,$e0,$3f,$ff,$f0,$06,$00,$00,$3f
0174   A154 FFF00600003F
0175   A15A F000401FF01F .db $f0,$00,$40,$1f,$f0,$1f,$ff,$ff,$fc,$00,$00,$3f
0175   A160 FFFFFC00003F
0176   A166 E00043FFFE7F .db $e0,$00,$43,$ff,$fe,$7f,$ff,$ff,$fc,$00,$00,$3f
0176   A16C FFFFFC00003F
0177   A172 E00047000760 .db $e0,$00,$47,$00,$07,$60,$07,$80,$38,$00,$1e,$3f
0177   A178 078038001E3F
0178   A17E E000440001E0 .db $e0,$00,$44,$00,$01,$e0,$07,$00,$78,$00,$ff,$ff
0178   A184 07007800FFFF
0179   A18A 4000440000B0 .db $40,$00,$44,$00,$00,$b0,$02,$00,$70,$01,$ff,$fe
0179   A190 02007001FFFE
0180   A196 4000C4000098 .db $40,$00,$c4,$00,$00,$98,$02,$00,$f0,$03,$ff,$fc
0180   A19C 0200F003FFFC
0181   A1A2 4000CC0000D8 .db $40,$00,$cc,$00,$00,$d8,$00,$01,$b0,$03,$ff,$c8
0181   A1A8 0001B003FFC8
0182   A1AE 0080CCFE00CC .db $00,$80,$cc,$fe,$00,$cc,$00,$03,$30,$07,$ff,$f8
0182   A1B4 00033007FFF8
0183   A1BA 0080CFF000E6 .db $00,$80,$cf,$f0,$00,$e6,$00,$03,$30,$07,$ff,$f0
0183   A1C0 00033007FFF0
0184   A1C6 0180CF0000E6 .db $01,$80,$cf,$00,$00,$e6,$00,$06,$30,$07,$ff,$f0
0184   A1CC 00063007FFF0
0185   A1D2 0180CC0000E3 .db $01,$80,$cc,$00,$00,$e3,$00,$0c,$30,$07,$ff,$f0
0185   A1D8 000C3007FFF0
0186   A1DE 0180F80000E2 .db $01,$80,$f8,$00,$00,$e2,$00,$04,$30,$03,$ff,$f0
0186   A1E4 00043003FFF0
0187   A1EA 0180F00000C6 .db $01,$80,$f0,$00,$00,$c6,$00,$06,$10,$01,$ff,$f0
0187   A1F0 00061001FFF0
0188   A1F6 0300E002008C .db $03,$00,$e0,$02,$00,$8c,$00,$03,$10,$00,$7f,$30
0188   A1FC 000310007F30
0189   A202 0300E00E0098 .db $03,$00,$e0,$0e,$00,$98,$00,$03,$18,$00,$00,$38
0189   A208 000318000038
0190   A20E 0300E00E0198 .db $03,$00,$e0,$0e,$01,$98,$00,$01,$88,$00,$00,$78
0190   A214 000188000078
0191   A21A 0300E00201B0 .db $03,$00,$e0,$02,$01,$b0,$04,$00,$8c,$00,$00,$7c
0191   A220 04008C00007C
0192   A226 0700F00601E0 .db $07,$00,$f0,$06,$01,$e0,$06,$00,$c6,$00,$00,$7e
0192   A22C 0600C600007E
0193   A232 0700F00601C0 .db $07,$00,$f0,$06,$01,$c0,$0e,$00,$63,$80,$00,$7f
0193   A238 0E006380007F
0194   A23E 0700D8060180 .db $07,$00,$d8,$06,$01,$80,$1a,$00,$23,$e0,$00,$7f
0194   A244 1A0023E0007F
0195   A24A FDFFFE0FFFFF .db $fd,$ff,$fe,$0f,$ff,$ff,$fb,$ff,$e7,$fe,$0f,$ff
0195   A250 FBFFE7FE0FFF
0196   A256 FDFFFFFFFFFF .db $fd,$ff,$ff,$ff,$ff,$ff,$f1,$ff,$c7,$ff,$ff,$ff
0196   A25C F1FFC7FFFFFF
0197   A262 0001FFFC0000 .db $00,$01,$ff,$fc,$00,$00,$00,$00,$0f,$ff,$ff,$ff
0197   A268 00000FFFFFFF
0198   A26E 0007FC1E0000 .db $00,$07,$fc,$1e,$00,$00,$00,$00,$1f,$ff,$ff,$ff
0198   A274 00001FFFFFFF
0199   A27A 000FF003007E .db $00,$0f,$f0,$03,$00,$7e,$00,$00,$3f,$ff,$ff,$ff
0199   A280 00003FFFFFFF
0200   A286 000F800180FF .db $00,$0f,$80,$01,$80,$ff,$c0,$00,$ff,$80,$ff,$ff
0200   A28C C000FF80FFFF
0201   A292 001E0007C07F .db $00,$1e,$00,$07,$c0,$7f,$e0,$01,$fc,$00,$0f,$ff
0201   A298 E001FC000FFF
0202   A29E             .end
0203   A29E             END
tasm: Number of errors = 0
