
Fresh ideas (understanding):

Goal: understand and code all algorithms in C

Algorithms
==========
Brute force:
    [c] selection sort
    [c] bubble sort
    [c] sequential search
    [c] string match
    [c] anagram
    [c] palindrome
Divide and Conquer: 
    [c] merge sort
    [c] quicksort
Decrease and Conquer:
    [c] binary search
    [c] insertion sort
    [c] dfs
    [c] bfs
Transform and Conquer:
    [c] heapsort (max)
Dynamic Programming:
    [c] warshall
    [c] floyd
Greedy:
    [c] prim # broken, not too bad though, got question to udemy
    [x] kruskal # broken pretty bad -- standalone krus.c is close though
List: 
    [c] reverse
    [c] merge
    [x] zip
    [ ] cycle detect
Tree: 
    [ ] balance
    [ ] traverse
String: 
    [c] boyer
    [c] split
Task:
    [c] thread
    [c] mutex
    [c] condition variable
Feedback:
    [c] running avg

$ cloc --by-file *.c
https://github.com/AlDanial/cloc v 1.66  T=0.03 s (277.4 files/s, 61481.6 lines/s)
-------------------------------------------------------------------------------
File                             blank        comment           code
-------------------------------------------------------------------------------
[ ] tree.c                              22             43            226
[x] graph.c                             27             44            217
[x] seasort.c                           33             30            213
[x] list.c                              24             17            211
[x] heap.c                              22              5            181
[x] hash.c                              17              1            150
[ ] trie.c                              11              6            102
[ ] rngstk.c                             6              2             63
-------------------------------------------------------------------------------
SUM:                               162            148           1363
-------------------------------------------------------------------------------

