
Fresh ideas (understanding):

Goal: understand and code all algorithms in C

Algorithms
==========
Brute force:
    [ ] selection sort
    [ ] bubble sort
    [ ] sequential search
    [ ] string match
    [ ] anagram
    [ ] palindrome
Divide and Conquer: 
    [ ] merge sort
    [ ] quicksort
Decrease and Conquer:
    [ ] binary search
    [ ] insertion sort
    [ ] dfs
    [ ] bfs
Transform and Conquer:
    [ ] heapsort (max)
Dynamic Programming:
    [ ] warshall
    [ ] floyd
Greedy:
    [ ] prim
    [ ] kruskal 
List: 
    [ ] reverse
    [ ] merge
    [ ] zip
    [ ] cycle detect (?remove)
Tree: 
    [ ] avl
    [ ] travs: pre, post, in, bfs, dfs
    [ ] trie
String: 
    [ ] boyer
    [ ] split
Task:
    [ ] thread
    [ ] mutex
    [ ] condition variable
Feedback:
    [ ] running avg

$ cloc --by-file *.c
https://github.com/AlDanial/cloc v 1.66  T=0.03 s (277.4 files/s, 61481.6 lines/s)
-------------------------------------------------------------------------------
File                             blank        comment           code
-------------------------------------------------------------------------------
[x] tree.c                              22             43            226
[x] graph.c                             27             44            217
[x] seasort.c                           33             30            213
[x] list.c                              24             17            211
[x] heap.c                              22              5            181
[x] hash.c                              17              1            150
[x] trie.c                              11              6            102
[x] rngstk.c                             6              2             63
-------------------------------------------------------------------------------
SUM:                               162            148           1363
-------------------------------------------------------------------------------

