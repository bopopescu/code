


ToDo:
1. add code for PR 1533350 (check for BAD_CRC see bug log)
2. add code for PR 1553408 (see below - bug in original code)


Installs:
========
Teams
VS 17
SDK/WDK
IAR (7.5) lic: DESLIC01
Git/Tortoise
Enlistments: enlist_repo.cmd as Admin
FT_Prog (online)
lilypad/surfdbg
Beyond Compare
JLink
Segger
Cygwin


Shares:
======
\\meavalon\installs
\\public\?????
\\desmo\WDS\Devices

Git:
===
git commit -a -m <msg>
gitk
git backouts ???

People:
======
Ricky 88/2033

Printer:
=======
\\prn-corp2\b88_1235_clr


Today:
> Continue PR 1553408
> Worked on getting surface device into mfg mode
> WIP verify repro, verify fix, weevil commands to logclear/logflush
> Setup environment for SB2 driver builds
> Troubleshot hardware problems with DevKit, loose JTAG board ribbon connector
> Command line build working
> surfdbg properly decoding Skip-B traces

ErrLog PRs
    a. bad crc => 1533350
    b. mixed logs => ???
    c. flush/clear no clr RAM => 1553408

Use Weevil
Fix certs
Fix lilypad - skip-b

PR 1553408
==========
Repro steps:
1. collectsamlogs and collectskipblogs script found here
    \\desmo\wds\PLE\Users\dah\Tools\Scripts
2. use weevil command > logflush
3. run step 1 again to have a copy of the curent logs
4. use weevil command >logclr to "clear flash logs"
5. Restart Windows
6. run step 1 again, this time look at copy of logs
7. expected result: 
6. after logflush, logclr again, the trace should be empty

Actual results:
old trace logs that were still in RAM are flushed again to flash
RAM should have been cleared after logflush and logclr

History:
Both API's leave the RAM buffer populated, need to clear RAM
in both cases
1. TraceEventLogFlush -> swap -> TraceEventLogRamBuffer
    flush events to NVRAM
2. TraceEventLogClear -> LogMgrEraseLog -> BlockMgrEraseSection
    erase NVRAM

void TraceEventBufferClear(UINT8 logInstance, BOOL clearAll)
{
    memset(s_trace[bufferInstance], 0, 
            sizeof(TRACE_EVT_ENTRY) * NVM_TE_NUM_BUFFER_ENTRIES));
}

Invoke add to cli:
    void TraceEventLogClear(UINT8 logInstance, BOOL clearAll);
    void TraceEventLogFlush(void);

// s_traceEventIndex[?=0/1] = {0,0};
// s_activeBuffer = ?

Break at:
UsbManager::USPRxTask <- bkpt
    USPProcessPacket
        UspRoutePacket
            SSHRoutePacket
                Host::ISystemIsCommandOKForMode
                => SSHRoutePacket::RoutePacket category = (0x07 ('\a')
                    DebugTask::YSODebugCallback

