12/30/2019 11:09:20 AM     C:\sandbox\code\toys\zplane

bld 88/1153
    86/1307

ToDo:
[x] git code for PR 1533350 (BAD_CRC) sha:64677
[x] git code for PR 1553408 (clr RAM) sha:d68f6
[ ] test RAM clear code
[x] fix JLink
[ ] doc common git commands
[z] SurfaceBase2FWUpdateDriver (see Dev tab)


Report:
======
Straightened out my git repo
add code chgs for:
  PR 1533350
  PR 1553408
Debugged my setup/DevKit - JLink power
Code reviewed BPM

Shopping List:
=============
half and half
srirochi


Installs:
========
Teams
VS 17
SDK/WDK
IAR (7.5) lic: DESLIC01
Git/Tortoise
Enlistments: enlist_repo.cmd as Admin
FT_Prog (online)
lilypad: \\desmo\wds\PLE\Users\dah\Tools\Lilypad\PLE_Edition
*** surfdbg: \\desmo\wds\PLE\Users\dah\Tools\SurfDbg_PLE
    JBOB -> load SKIP-B_Export.txt
Beyond Compare
JLink
Segger
Cygwin

Notes:
=====
cmd line builds go to BuildsOutput by version


Shares:
======
\\meavalon\installs
\\products\PUBLIC
\\desmo\WDS\Devices

Git:
===
git commit -a -m <msg>
gitk
git backouts ???
git reset --hard HEAD // uncommit


Git flow:
========
$ git branch -a
  master
  personal/v-deawil/zap_ple_master_WPO2

$ git checkout product/zap/release_20191125
Switched to branch 'product/zap/release_20191125'
Your branch is up to date with 'origin/product/zap/release_20191125'.

$ git pull
remote: Azure Repos
remote: We noticed you're using an older version of Git. For the best experience, upgrade to a newer version.
remote: Found 33 objects to send. (536 ms)
Unpacking objects: 100% (33/33), done.
From https://dev.azure.com/MSFTDEVICES/MCU/_git/MCU
   c3e9607f..968c9c3a  product/zap/release_20191125 -> origin/product/zap/release_20191125
 * [new branch]        personal/v-babart/zap_release_20191125_NVM_Bug1553408 -> origin/personal/v-babart/zap_release_20191125_NVM_Bug1553408
Updating c3e9607f..968c9c3a
Fast-forward
 src/application/InternalBatteryTask-RockyRoad/InternalBatteryTask.c   | 4 ++--
 .../SKIP-B/bsp/InternalBatteryTask-RockyRoad/InternalBatteryTaskBsp.c | 3 +--
 2 files changed, 3 insertions(+), 4 deletions(-)

$ git branch
  master
* product/zap/release_20191125

$ git checkout -b personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug
Switched to a new branch 'personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug'

v-maadan@MININT-THVV2F2 MINGW64 /c/git/mcu (personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug)
$ git branch
  master
  product/zap/release_20191125
* personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug

$ git commit -a
[personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug 5b6d8c6e] WIP starting to integrate my debugging instrumentation
 1 file changed, 4 insertions(+)

v-maadan@MININT-THVV2F2 MINGW64 /c/git/mcu (personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug)
$ git push
fatal: The current branch personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug

$  git push --set-upstream origin personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug
Enumerating objects: 11, done.
Counting objects: 100% (11/11), done.
Delta compression using up to 4 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 660 bytes | 73.00 KiB/s, done.
Total 6 (delta 5), reused 0 (delta 0)
remote: Analyzing objects... (6/6) (54 ms)
remote: Storing packfile... done (108 ms)
remote: Storing index... done (54 ms)
remote: We noticed you're using an older version of Git. For the best experience, upgrade to a newer version.
To https://dev.azure.com/MSFTDEVICES/MCU/_git/MCU
 * [new branch]        personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug -> personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug
Branch 'personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug' set up to track remote branch 'personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug' from 'origin'.

$ git status
On branch personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug
Your branch is up to date with 'origin/personal/v-maadan/product_zap_release_20191125_ReqBPM_1_bug'.


People:
======
Ricky 88/2033

Printer:
=======
\\prn-corp2\b88_1235_clr


Today:
> Continue PR 1553408
> Worked on getting surface device into mfg mode
> WIP verify repro, verify fix, weevil commands to logclear/logflush
> Setup environment for SB2 driver builds
> Troubleshot hardware problems with DevKit, loose JTAG board ribbon connector
> Command line build working
> surfdbg properly decoding Skip-B traces

ErrLog PRs
    a. bad crc => 1533350
    b. mixed logs => ???
    c. flush/clear no clr RAM => 1553408

Use Weevil
Fix certs
Fix lilypad - skip-b

PR 1553408
==========
Repro steps:
1. collectsamlogs and collectskipblogs script found here
    \\desmo\wds\PLE\Users\dah\Tools\Scripts
2. use weevil command > logflush
3. run step 1 again to have a copy of the curent logs
4. use weevil command >logclr to "clear flash logs"
5. Restart Windows
6. run step 1 again, this time look at copy of logs
7. expected result: 
6. after logflush, logclr again, the trace should be empty

Actual results:
old trace logs that were still in RAM are flushed again to flash
RAM should have been cleared after logflush and logclr

History:
Both API's leave the RAM buffer populated, need to clear RAM
in both cases
1. TraceEventLogFlush -> swap -> TraceEventLogRamBuffer
    flush events to NVRAM
2. TraceEventLogClear -> LogMgrEraseLog -> BlockMgrEraseSection
    erase NVRAM


static void TraceEventBufferClear(UINT8 logInstance)
{
#if NVM_CLEAR_LOG_BUFFER
    memset(s_traceEventBuffer[logInstance], 0, 
            sizeof(TRACE_EVT_ENTRY) * NVM_TE_NUM_BUFFER_ENTRIES);
#endif
}

Invoke add to cli:
    void TraceEventLogClear(UINT8 logInstance, BOOL clearAll);
    void TraceEventLogFlush(void);

// s_traceEventIndex[?=0/1] = {0,0};
// s_activeBuffer = ?

Break at:
UsbManager::USPRxTask <- bkpt
    USPProcessPacket
        UspRoutePacket
            SSHRoutePacket
                Host::ISystemIsCommandOKForMode
                => SSHRoutePacket::RoutePacket category = (0x07 ('\a')
                    DebugTask::YSODebugCallback


Maybe battery bug:
=================
static void CTTUpdate(void)
{
    STG_CTT_NVM *pCttNvm = &g_UserConfigSettings.cttNvm;
    UINT32 now_sec = ISystemGetUtcSeconds();
    UINT16 now_days = now_sec / SECONDS_PER_DAY;

    // if no CTT start date, then start CTT
    if (!pCttNvm->cttStartDate) // always zero
    {
        CTTStart(now_days);
        IIntBatteryRegisterDynamicDataNotification((INT_BATTERY_NOTIFY_FUNC)(UINT32)CTTBatteryDynamicDataNotificationHandler);
    }

    ISystemGetUtcSeconds is always returning ZERO

Supported commands:
==================
>capslock
>diagmode
>fangetctrl
>fangetspeed
>fansetctrl
>fansetmode
>flashsecurity
>fwupdate
>fwversion
>getblversion
>getdbgmode
>getdesc
>getfsmode
>getfwversion
>getkeyboardlayout
>getkeyboardlegend
>getrtmode
>i2cping
>i2cpingaddr
>i2cread
>i2cwrite
>kaosstats
>logcapacity
>logclrall
>logclrcritical
>logclrhealth
>logclrtrace
>logdecode
>logflush
>loggetall
>loggetcritical
>loggethealth
>loggettrace
>loginfo
>lognumclassinstances
>loopbacks
>loopbacku
>pinghost
>reset
>setkeyboardlayout
>test
>tl
>tm
>wdog


