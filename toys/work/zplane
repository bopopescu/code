12/30/2019 1:47:27 PM     C:\sandbox\code\toys\work\zplane

bld 88/1153
    86/1307

ToDo:
[ ] Get weevil running on DevKit
[ ] test RAM clear code
[ ] SurfaceBase2FWUpdateDriver (see Dev tab)
[ ] Move my files to MSFT personal GIT
[x] fix JLink
[x] doc common git commands
[x] git code for PR 1533350 (BAD_CRC) sha:64677
[x] git code for PR 1553408 (clr RAM) sha:d68f6

Today:
> Continue PR 1553408
> Worked on getting surface device into mfg mode
> WIP verify repro, verify fix, weevil commands to logclear/logflush
> Setup environment for SB2 driver builds
> Troubleshot hardware problems with DevKit, loose JTAG board ribbon connector
> Command line build working
> surfdbg properly decoding Skip-B traces

ErrLog PRs
    a. bad crc => 1533350
    b. mixed logs => ???
    c. flush/clear no clr RAM => 1553408

Use Weevil
Fix certs
Fix lilypad - skip-b

Report:
======
Straightened out my git repo
add code chgs for:
  PR 1533350
  PR 1553408
Debugged my setup/DevKit - JLink power
Code reviewed BPM

Shopping List:
=============
half and half
srirochi

Notes:
=====
cmd line builds go to BuildsOutput by version



PR 1553408
==========
Repro steps:
1. collectsamlogs and collectskipblogs script found here
    \\desmo\wds\PLE\Users\dah\Tools\Scripts
2. use weevil command > logflush
3. run step 1 again to have a copy of the curent logs
4. use weevil command >logclr to "clear flash logs"
5. Restart Windows
6. run step 1 again, this time look at copy of logs
7. expected result: 
6. after logflush, logclr again, the trace should be empty

Actual results:
old trace logs that were still in RAM are flushed again to flash
RAM should have been cleared after logflush and logclr

History:
Both API's leave the RAM buffer populated, need to clear RAM
in both cases
1. TraceEventLogFlush -> swap -> TraceEventLogRamBuffer
    flush events to NVRAM
2. TraceEventLogClear -> LogMgrEraseLog -> BlockMgrEraseSection
    erase NVRAM


static void TraceEventBufferClear(UINT8 logInstance)
{
#if NVM_CLEAR_LOG_BUFFER
    memset(s_traceEventBuffer[logInstance], 0, 
            sizeof(TRACE_EVT_ENTRY) * NVM_TE_NUM_BUFFER_ENTRIES);
#endif
}

Invoke add to cli:
    void TraceEventLogClear(UINT8 logInstance, BOOL clearAll);
    void TraceEventLogFlush(void);

// s_traceEventIndex[?=0/1] = {0,0};
// s_activeBuffer = ?

Break at:
UsbManager::USPRxTask <- bkpt
    USPProcessPacket
        UspRoutePacket
            SSHRoutePacket
                Host::ISystemIsCommandOKForMode
                => SSHRoutePacket::RoutePacket category = (0x07 ('\a')
                    DebugTask::YSODebugCallback


Maybe battery bug:
=================
static void CTTUpdate(void)
{
    STG_CTT_NVM *pCttNvm = &g_UserConfigSettings.cttNvm;
    UINT32 now_sec = ISystemGetUtcSeconds();
    UINT16 now_days = now_sec / SECONDS_PER_DAY;

    // if no CTT start date, then start CTT
    if (!pCttNvm->cttStartDate) // always zero
    {
        CTTStart(now_days);
        IIntBatteryRegisterDynamicDataNotification((INT_BATTERY_NOTIFY_FUNC)(UINT32)CTTBatteryDynamicDataNotificationHandler);
    }

    ISystemGetUtcSeconds is always returning ZERO


