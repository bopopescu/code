
project: k&r+pop
combine refcount.c & mempool.c for memmgmt.c & forth.c

rotations:
http://danceswithcode.net/engineeringnotes/index.html

cool web page: http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/

[ ] start notebook - organize C code
[ ] tabulate collection
[ ] ==> hack macros
[ ] ==> hack state machine ==> macro-ize
[ ] ==> just make USEFUL tools
[ ] ==> glean from linux

bject persistence
interpretation

http://www.embedded.com/electronics-blogs/break-points/4407254/Firmware-developer-s-essential-reading-listhttps://stackoverflow.com/questions/4595545/a-btree-simple-implementation-in-c
http://www.amittai.com/prose/bplustree.html
http://www.amittai.com/prose/bpt.c
http://cis.stvincent.edu/html/tutorials/swd/btree/btree.html
Data Structures & Program Design, 2nd ed. Robert L. Kruse. Prentice-Hall (1987).

BTREE:
1. test w/input file
2. save output
3. reload file
4. serialization


https://software.nasa.gov/


Mac static verifier:
http://clang-analyzer.llvm.org/

[cool/interesting sites]
http://pfacka.binaryparadise.com/articles/guide-to-advanced-programming-in-C.html
https://graphics.stanford.edu/~seander/bithacks.html
https://notabug.org/koz.ross/awesome-c
https://github.com/aleksandar-todorovic/awesome-c
https://github.com/fragglet/c-algorithms
http://www.ccs.neu.edu/home/gene/cs-info.html
http://www.mytsoftware.com/dailyproject/
https://www.pinterest.com/explore/c-programming/
http://www.includehelp.com/c-programs/advacnce-c-examples.aspx
http://first.wpi.edu/Images/CMS/First/2006CON_Advanced_C_Programming_Hibner_Shaul.ppt
http://www.csc.villanova.edu/~tway/coolc/
http://dotat.at
http://stackoverflow.com/questions/1644868/c-define-macro-for-debug-printing
http://stackoverflow.com/questions/1772119/the-most-useful-user-made-c-macros-in-gcc-also-c99
http://nullprogram.com/blog/2014/09/02/ <== c11 stuff
http://amsekharkernel.blogspot.com/2012/06/simple-finite-state-machine-for.html

[Tools:]
cflow

Macros
======
https://github.com/pfultz2/Cloak/wiki/C-Preprocessor-tricks,-tips,-and-idioms
http://jhnet.co.uk/articles/cpp_magic <== pp == preprocessor
http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/  <== magic of XOR
http://fabiensanglard.net/c/



// http://blog.smartbear.com/c-plus-plus/the-biggest-changes-in-c11-and-why-you-should-care/
  lambda, auto, initialization, deleted/defaulted functions, nullptr,
  delegating constructors, rvalue refs, stdlib, threading, smart ptrs, new algos

https://cmake.org/Wiki/CMake/Testing_With_CTest
http://stackoverflow.com/questions/8507723/how-to-start-working-with-gtest-and-cmake

    [ ] checkout: https://notabug.org/koz.ross/awesome-c
    [ ] http://www.3dgep.com/understanding-quaternions/
    [ ] geometry
    [ ] CMake -> toys\tinyxml\prj & cbox\json & serdes

